#
#	Makefile for fd
#

TITLE	= FD-
PREFIX	= \usr\local
TOPDIR	= $(PREFIX)
BINDIR	= $(TOPDIR)\bin
MANDIR	= $(TOPDIR)\man\man$(MANSEC)
CATDIR	= $(TOPDIR)\man\cat$(MANSEC)
DEFRC	= \etc\fdrc
DOSRC	= ~FD\\fdrc
UNITBL	= fd-unicd.tbl
INSTALL	= copy
CHMOD	= chmod
MANSEC	= 1

SRC	= main.c term.c pathname.c libc.c input.c shell.c info.c \
	dosdisk.c dosemu.c mkunitbl.c \
	unixdisk.c unixemu.c \
	rockridg.c builtin.c parse.c \
	kanji.c file.c apply.c archive.c tree.c command.c browse.c \
	kanjicnv.c mkfuncno.c expfunc.c mkmfsed.c
HEADER	= fd.h machine.h types.h kctype.h term.h pathname.h \
	dosdisk.h \
	unixdisk.h unixemu.h \
	func.h functabl.h

DOC	= README HISTORY FAQ TECHKNOW Install ToAdmin
MANSRC	= fd.man
MANCAT	= fd.cat
MANSEC	= 1
RUNCOM	= fdrc
ARGS	= object.arg

JSRCS	= $(DOC) kanji.hin $(MANSRC) $(MANCAT)
ESRCS	= Configur Makefile Makefile.in $(SRC) $(HEADER) \
	makefile.gpc makefile.g98 \
	makefile.dpc makefile.d98 \
	makefile.lpc makefile.l98 \
	makefile.bpc makefile.b98 \
	config.hin mkmfdosg.sed mkmfdosd.sed mkmfdosl.sed mkmfdosb.sed\
	version.h _fdrc _fdrc.dif
SOURCES	= $(JSRCS) $(ESRCS)

CC	= bcc
SED	= sed
PROGRAM	= fd
OBJ1	= main.obj term.obj pathname.obj libc.obj \
	input.obj shell.obj info.obj
OBJ2	= dosdisk.obj unixemu.obj unixdisk.obj \
	rockridg.obj builtin.obj parse.obj
OBJ3	= kanji.obj file.obj apply.obj archive.obj \
	tree.obj command.obj browse.obj

LDFLAGS	=   
CFLAGS	= -DFD=1 -DDOSV=1 -DDEFRUNCOM=\"$(DOSRC)\" -O -N -ml -w-par -w-pia

.SUFFIXES: .h .c .obj .exe

############################################################
#	Dependency Rules
############################################################

all:	$(PROGRAM).exe $(PROGRAM).$(MANSEC) $(UNITBL)

$(PROGRAM).exe: $(OBJ1) $(OBJ2) $(OBJ3) $(ARGS)
	$(CC) $(CFLAGS) -e$@ @$(ARGS) $(LDFLAGS)
#	ren $@ $(PROGRAM)
#	aout2exe $(PROGRAM)
#	del $(PROGRAM)

$(ARGS): $(OBJ1) $(OBJ2) $(OBJ3)
	@echo $(OBJ1) > $(ARGS)
	@echo $(OBJ2) >> $(ARGS)
	@echo $(OBJ3) >> $(ARGS)

.c.obj:
	$(CC) $(CFLAGS) $(CPPFLAGS) -c -o$@ $*.c


############################################################
# kanji using module

kanji.h: kanjicnv.exe kanji.hin machine.h config.h
	.\kanjicnv.exe -s   kanji.hin $@

$(PROGRAM).$(MANSEC): kanjicnv.exe $(MANSRC) machine.h config.h
	.\kanjicnv.exe -s  $(MANSRC) $@

$(PROGRAM).$(MANSEC)c: kanjicnv.exe $(MANCAT) machine.h config.h
	.\kanjicnv.exe -s $(MANCAT) $@

$(PROGRAM).doc: kanjicnv.exe $(MANCAT) machine.h config.h
	.\kanjicnv.exe -s -b $(MANCAT) $@

history.doc: kanjicnv.exe HISTORY machine.h config.h
	.\kanjicnv.exe -s HISTORY $@

kanjicnv.exe: kanjicnv.c
	$(CC) $(CFLAGS) -e$@ kanjicnv.c
#	ren $@ kanjicnv
#	aout2exe kanjicnv
#	del kanjicnv


############################################################
# function list using module

funcno.h: mkfuncno.exe
	.\mkfuncno.exe $@

mkfuncno.exe: mkfuncno.c functabl.h fd.h config.h
	$(CC) $(CFLAGS) -e$@ mkfuncno.c
#	ren $@ mkfuncno
#	aout2exe mkfuncno
#	del mkfuncno

config.h: config.hin
	copy config.hin config.h


############################################################
# UNICODE table generating module

$(UNITBL): mkunitbl.exe
	.\mkunitbl.exe $@

mkunitbl.exe: mkunitbl.c
	$(CC) $(CFLAGS) -e$@ mkunitbl.c
#	ren $@ mkunitbl
#	aout2exe mkunitbl
#	del mkunitbl


############################################################
# to install all

install: $(PROGRAM).exe $(PROGRAM).$(MANSEC) $(UNITBL)
	$(INSTALL)  $(PROGRAM).exe $(BINDIR)
	$(CHMOD) a+rx $(BINDIR)\$(PROGRAM).exe
	$(INSTALL) $(PROGRAM).$(MANSEC) $(MANDIR)\$(PROGRAM).$(MANSEC)
	$(CHMOD) a+r $(MANDIR)\$(PROGRAM).$(MANSEC)
	-if [ -f $(RUNCOM) ]; then \
		$(INSTALL) $(RUNCOM) $(DEFRC); \
		$(CHMOD) a+r $(DEFRC); \
	fi
	-if [ -f $(UNITBL) ]; then \
		$(INSTALL) $(UNITBL) $(BINDIR); \
		$(CHMOD) a+r $(BINDIR)\$(UNTABL); \
	fi

catman: $(PROGRAM).$(MANSEC)c
	$(INSTALL) $(PROGRAM).$(MANSEC)c $(CATDIR)\$(PROGRAM).$(MANSEC)
	$(CHMOD) a+r $(CATDIR)\$(PROGRAM).$(MANSEC)

catman-b: $(PROGRAM).doc
	$(INSTALL) $(PROGRAM).doc $(CATDIR)\$(PROGRAM).$(MANSEC)
	$(CHMOD) a+r $(CATDIR)\$(PROGRAM).$(MANSEC)

compman: catman
	compress -f $(CATDIR)\$(PROGRAM).$(MANSEC)

compman-b: catman-b
	compress -f $(CATDIR)\$(PROGRAM).$(MANSEC)


############################################################
# to make dependency

depend: $(SRC) kanji.h funcno.h
	mv Makefile.in Makefile.in.bak
	makedepend -s "# DO NOT DELETE THIS LINE -- make depend depends on it."\
		-f Makefile.tmp -- $(CFLAGS) -- $(SRC)
	rm -f Makefile.tmp.bak
	$(SED) -e '\^# DO NOT DELETE THIS LINE\,$$d' Makefile.in.bak\
		> Makefile.in
	echo "# DO NOT DELETE THIS LINE -- make depend depends on it."\
		>> Makefile.in
	$(SED) -e '1,\^# DO NOT DELETE THIS LINE\d'\
		-e 's\\\[^ ]* *\\g'\
		-e 's\\.o\\_\_OBJ\_\_\g'\
		-e 's\ *$$\\'\
		-e '\: *$$\d' Makefile.tmp >> Makefile.in
	rm -f Makefile.in.bak Makefile.tmp


############################################################
# to make configuration file manually

config: Configur expfunc.c
	-if (echo 't() { echo $1; }; t test' | $(SHELL) >\dev\null 2>&1); then \
		$(SED) "2,3d" Configur | $(SHELL) > config.h; \
	else \
		if [ ! -f expfunc ]; then \
			$(CC) $(CFLAGS) -eexpfunc.exe expfunc.c; \
		fi; \
		$(SED) "2,3d" Configur | .\expfunc.exe | $(SHELL) \
		> config.h; \
	fi


############################################################
# for programer's maintenance

GETVER	= HEAD="`tail -1 version.h`";\
	VER=`expr "$$HEAD" : '.*\([0-9][0-9]*\.[0-9a-z\-]*\).*'`

tar: $(SOURCES)
	($(GETVER);\
	tar cvf $(TITLE)"$$VER".tar $(SOURCES);\
	compress -f $(TITLE)"$$VER".tar)

lzh: $(SOURCES)
	($(GETVER);\
	rm -f $(TITLE)"$$VER".lzh;\
	lha a $(TITLE)"$$VER".lzh $(SOURCES))

shar: $(SOURCES)
	($(GETVER);\
	rm -f $(TITLE)$$VER.shar.[0-9][0-9];\
	shar -L50 -apc -n $(TITLE)"$$VER" -o $(TITLE)"$$VER".shar \
	-C $(JSRCS) -T $(ESRCS))

clean:
	-rm -f *.obj funcno.h kanji.h
	-rm -f kanjicnv.exe mkfuncno.exe expfunc.exe mkunitbl.exe
	-rm -f $(PROGRAM).exe $(PROGRAM).$(MANSEC) $(PROGRAM).$(MANSEC)c
	-rm -f $(PROGRAM).doc $(ARGS)
	-rm -f core
# DO NOT DELETE THIS LINE -- make depend depends on it.

main.obj: fd.h
main.obj: machine.h config.h
main.obj: types.h pathname.h term.h
main.obj: func.h
main.obj: kctype.h
main.obj: funcno.h kanji.h version.h dosdisk.h
term.obj: machine.h config.h
term.obj: term.h
pathname.obj: machine.h config.h
pathname.obj: pathname.h
libc.obj: fd.h
libc.obj: machine.h config.h
libc.obj: types.h pathname.h term.h func.h
libc.obj: kctype.h kanji.h
input.obj: fd.h
input.obj: machine.h config.h
input.obj: types.h pathname.h
input.obj: term.h func.h
input.obj: kctype.h
input.obj: kanji.h
shell.obj: fd.h
shell.obj: machine.h config.h
shell.obj: types.h pathname.h term.h func.h
shell.obj: kctype.h
shell.obj: funcno.h kanji.h
info.obj: fd.h
info.obj: machine.h config.h
info.obj: types.h pathname.h term.h funcno.h kanji.h
dosdisk.obj: machine.h config.h
dosdisk.obj: dosdisk.h
dosemu.obj: fd.h
dosemu.obj: machine.h config.h
dosemu.obj: types.h pathname.h func.h
dosemu.obj: kctype.h
dosemu.obj: dosdisk.h
unixdisk.obj: machine.h config.h unixdisk.h
unixdisk.obj: unixemu.h dosdisk.h
unixemu.obj: fd.h
unixemu.obj: machine.h config.h
unixemu.obj: types.h pathname.h func.h
unixemu.obj: unixdisk.h
unixemu.obj: unixemu.h
rockridg.obj: fd.h
rockridg.obj: machine.h config.h
rockridg.obj: types.h pathname.h func.h
builtin.obj: fd.h
builtin.obj: machine.h config.h
builtin.obj: types.h pathname.h term.h func.h
builtin.obj: kctype.h
builtin.obj: funcno.h kanji.h dosdisk.h
parse.obj: fd.h
parse.obj: machine.h config.h
parse.obj: types.h pathname.h func.h
parse.obj: kctype.h
parse.obj: dosdisk.h
kanji.obj: fd.h
kanji.obj: machine.h config.h
kanji.obj: types.h pathname.h term.h func.h
kanji.obj: kctype.h
file.obj: fd.h
file.obj: machine.h config.h
file.obj: types.h pathname.h term.h func.h
file.obj: kctype.h kanji.h
apply.obj: fd.h
apply.obj: machine.h config.h
apply.obj: types.h pathname.h term.h func.h
apply.obj: kanji.h
archive.obj: fd.h
archive.obj: machine.h
archive.obj: config.h types.h
archive.obj: pathname.h term.h func.h
archive.obj: funcno.h kanji.h
tree.obj: fd.h
tree.obj: machine.h config.h
tree.obj: types.h pathname.h term.h func.h
tree.obj: kanji.h
command.obj: fd.h
command.obj: machine.h
command.obj: config.h types.h
command.obj: pathname.h term.h func.h
command.obj: funcno.h kanji.h
command.obj: functabl.h
browse.obj: fd.h
browse.obj: machine.h config.h
browse.obj: types.h pathname.h
browse.obj: term.h func.h
browse.obj: funcno.h kanji.h
mkfuncno.obj: fd.h
mkfuncno.obj: machine.h config.h
mkfuncno.obj: types.h pathname.h functabl.h
mkmfsed.obj: machine.h config.h
