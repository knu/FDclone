#
#	Makefile for fd
#

TITLE	= FD-
VERSION	= 2
PREFIX	= 
BUILD	=
MANSEC	= 1
TOPDIR	= $(BUILD)$(PREFIX)
BINDIR	= $(TOPDIR)\bin
DATADIR	= $(TOPDIR)\share
MANDIR	= $(TOPDIR)\man\man$(MANSEC)
CATDIR	= $(TOPDIR)\man\cat$(MANSEC)
EMANDIR	= $(TOPDIR)\man\man$(MANSEC)
ECATDIR	= $(TOPDIR)\man\cat$(MANSEC)
IPKWDIR	= .\ipk.work
IPKTDIR	= .\ipk.tmp
DEFRC	= $(BUILD)\etc\fd2rc
DOSRC	= ~FD\\fd2rc
UNITBL	= fd-unicd.tbl
INSTALL	= copy /y
ECHO	= command /c echo
CP	= copy /y
RM	= del
CHMOD	= chmod
LN	= copy /y

SRC	= main.c term.c pathname.c \
	system.c posixsh.c doscom.c \
	dosdisk.c dosemu.c mkunitbl.c \
	unixdisk.c unixemu.c \
	libc.c file.c apply.c \
	parse.c builtin.c shell.c \
	kanji.c input.c \
	info.c rockridg.c archive.c tree.c \
	custom.c command.c browse.c \
	kanjicnv.c mkfuncno.c expfunc.c mkmfsed.c
HEADER	= fd.h machine.h types.h kctype.h term.h pathname.h \
	system.h \
	dosdisk.h \
	unixdisk.h unixemu.h \
	func.h functabl.h

DOC	= README HISTORY FAQ TECHKNOW Install ToAdmin LICENSES
EDOC	= README.eng HISTORY.eng FAQ.eng TECHKNOW.eng \
	Install.eng ToAdmin.eng LICENSES.eng
MANSRC	= fd.man
MANCAT	= fd.cat
EMANSRC	= fd_e.man
EMANCAT	= fd_e.cat
RUNCOM	= fdrc
ARGS	= object.arg

JSRCS	= $(DOC) kanji.hin $(MANSRC) $(MANCAT)
ESRCS	= $(EDOC) $(EMANSRC) $(EMANCAT) \
	Configur Makefile Makefile.in $(SRC) $(HEADER) \
	makefile.gpc makefile.g98 \
	makefile.dpc makefile.d98 \
	makefile.lpc makefile.l98 \
	makefile.bpc makefile.b98 \
	config.hin mkmfdosg.sed mkmfdosd.sed mkmfdosl.sed mkmfdosb.sed \
	version.h _fdrc _fdrc.dif
SOURCES	= $(JSRCS) $(ESRCS)
SHSOURCES = system.c posixsh.c doscom.c pathname.c \
	machine.h kctype.h system.h pathname.h unixemu.h \
	kanjicnv.c expfunc.c mkmfsed.c \
	TECHKNOW Configur Makefile Makefile.in \
	makefile.gpc makefile.g98 \
	makefile.dpc makefile.d98 \
	makefile.lpc makefile.l98 \
	makefile.bpc makefile.b98 \
	config.hin mkmfdosg.sed mkmfdosd.sed mkmfdosl.sed mkmfdosb.sed

CC	= lcc86
HOSTCC	= $(CC)
SED	= sed
PROGRAM	= fd
FDSHELL	= fdsh
OBJ1	= main.obj term.obj pathname.obj \
	system.obj posixsh.obj doscom.obj \
	dosdisk.obj unixemu.obj unixdisk.obj
OBJ2	= libc.obj file.obj apply.obj \
	parse.obj builtin.obj shell.obj \
	kanji.obj input.obj
OBJ3	= info.obj rockridg.obj archive.obj tree.obj \
	custom.obj command.obj browse.obj
SOBJ	= ssystem.obj sposixsh.obj sdoscom.obj spathnam.obj
BOBJ	= bsystem.obj bdoscom.obj bpathnam.obj
ALLOC	=
DEBUG	=

LDFLAGS	=   -lintlib -ltinymain.obj $(ALLOC)
CFLAGS	= -DPC98=1 -O $(DEBUG)
HOSTCFLAGS = -DPC98=1 -O
SLDFLAGS =  -lintlib -ltinymain.obj $(ALLOC)
BCFLAGS	= $(CFLAGS) -DMINIMUMSHELL

.SUFFIXES: .h .c .obj .exe

############################################################
#	Dependency Rules
############################################################

all:	$(PROGRAM).exe $(PROGRAM).$(MANSEC) $(UNITBL)

$(PROGRAM).exe: $(OBJ1) $(OBJ2) $(OBJ3) $(ARGS)
	$(CC) -ml -h -k"-s 4c00" -o $@ @$(ARGS) $(LDFLAGS)
#	ren $@ $(PROGRAM)
#	aout2exe $(PROGRAM)
#	del $(PROGRAM)

$(ARGS): $(OBJ1) $(OBJ2) $(OBJ3)
	@$(ECHO) $(OBJ1) > $(ARGS)
	@$(ECHO) $(OBJ2) >> $(ARGS)
	@$(ECHO) $(OBJ3) >> $(ARGS)

main.obj: main.c
	$(CC) -DFD=$(VERSION) $(CFLAGS) -ml -h -k"-s 4c00" $(CPPFLAGS) -c -o $@ -DDEFRUNCOM=\\\"$(DOSRC)\\\"  $*.c

system.obj: system.c
	$(CC) -DFD=$(VERSION) $(CFLAGS) -ml -h -k"-s 4c00" $(CPPFLAGS) -c -o $@ -DDEFRUNCOM=\\\"$(DOSRC)\\\" $*.c

.c.obj:
	$(CC) -DFD=$(VERSION) $(CFLAGS) -ml -h -k"-s 4c00" $(CPPFLAGS) -c -o $@ $*.c


############################################################
# kanji using module

kanji.h: kanjicnv.exe kanji.hin machine.h config.h
	.\kanjicnv.exe -s   kanji.hin $@

$(PROGRAM).$(MANSEC): kanjicnv.exe $(MANSRC) machine.h config.h
	.\kanjicnv.exe -s  $(MANSRC) $@

$(PROGRAM).$(MANSEC)c: kanjicnv.exe $(MANCAT) machine.h config.h
	.\kanjicnv.exe -s $(MANCAT) $@

$(PROGRAM).doc: kanjicnv.exe $(MANCAT) machine.h config.h
	.\kanjicnv.exe -s -b $(MANCAT) $@

$(PROGRAM).eng: kanjicnv.exe $(EMANCAT) machine.h config.h
	.\kanjicnv.exe -b $(EMANCAT) $@

README.doc: kanjicnv.exe README machine.h config.h
	.\kanjicnv.exe -s README $@

HISTORY.doc: kanjicnv.exe HISTORY machine.h config.h
	.\kanjicnv.exe -s HISTORY $@

FAQ.doc: kanjicnv.exe FAQ machine.h config.h
	.\kanjicnv.exe -s FAQ $@

LICENSES.doc: kanjicnv.exe LICENSES machine.h config.h
	.\kanjicnv.exe -s LICENSES $@

kanjicnv.exe: kanjicnv.c
	$(HOSTCC) $(HOSTCFLAGS) -o $@ kanjicnv.c
#	ren $@ kanjicnv
#	aout2exe kanjicnv
#	del kanjicnv


############################################################
# function list using module

funcno.h: mkfuncno.exe
	.\mkfuncno.exe $@

mkfuncno.exe: mkfuncno.c functabl.h fd.h config.h
	$(HOSTCC) -DFD=$(VERSION) $(HOSTCFLAGS) -o $@ mkfuncno.c
#	ren $@ mkfuncno
#	aout2exe mkfuncno
#	del mkfuncno

config.h: config.hin
	$(CP) config.hin config.h


############################################################
# UNICODE table generating module

$(UNITBL): mkunitbl.exe
	.\mkunitbl.exe $@

mkunitbl.exe: mkunitbl.c
	$(HOSTCC) $(HOSTCFLAGS) -o $@ mkunitbl.c
#	ren $@ mkunitbl
#	aout2exe mkunitbl
#	del mkunitbl


############################################################
# to install all

install: $(PROGRAM).exe $(PROGRAM).$(MANSEC) $(UNITBL)
	$(INSTALL)  $(PROGRAM).exe $(BINDIR)
	$(CHMOD) a+rx $(BINDIR)\$(PROGRAM).exe
	-$(RM) $(BINDIR)\$(FDSHELL).exe
	$(LN) $(BINDIR)\$(PROGRAM).exe $(BINDIR)\$(FDSHELL).exe
	$(CHMOD) a+rx $(BINDIR)\$(FDSHELL).exe
	$(INSTALL) $(EMANSRC) $(EMANDIR)\$(PROGRAM).$(MANSEC)
	$(CHMOD) a+r-x $(EMANDIR)\$(PROGRAM).$(MANSEC)
	$(INSTALL) $(PROGRAM).$(MANSEC) $(MANDIR)\$(PROGRAM).$(MANSEC)
	$(CHMOD) a+r-x $(MANDIR)\$(PROGRAM).$(MANSEC)
	-if [ -f $(RUNCOM) ]; then \
		$(INSTALL) $(RUNCOM) $(DEFRC); \
		$(CHMOD) a+r-x $(DEFRC); \
	fi
	-if [ -f $(UNITBL) ]; then \
		$(INSTALL) $(UNITBL) $(BINDIR); \
		$(CHMOD) a+r-x $(BINDIR)\$(UNITBL); \
	fi

catman: $(PROGRAM).$(MANSEC)c $(EMANCAT)
	$(INSTALL) $(EMANCAT) $(ECATDIR)\$(PROGRAM).$(MANSEC)
	$(CHMOD) a+r-x $(ECATDIR)\$(PROGRAM).$(MANSEC)
	$(INSTALL) $(PROGRAM).$(MANSEC)c $(CATDIR)\$(PROGRAM).$(MANSEC)
	$(CHMOD) a+r-x $(CATDIR)\$(PROGRAM).$(MANSEC)

catman-b: $(PROGRAM).doc $(PROGRAM).eng
	$(INSTALL) $(PROGRAM).eng $(ECATDIR)\$(PROGRAM).$(MANSEC)
	$(CHMOD) a+r-x $(ECATDIR)\$(PROGRAM).$(MANSEC)
	$(INSTALL) $(PROGRAM).doc $(CATDIR)\$(PROGRAM).$(MANSEC)
	$(CHMOD) a+r-x $(CATDIR)\$(PROGRAM).$(MANSEC)

compman: catman
	compress -f $(ECATDIR)\$(PROGRAM).$(MANSEC)
	compress -f $(CATDIR)\$(PROGRAM).$(MANSEC)

compman-b: catman-b
	compress -f $(ECATDIR)\$(PROGRAM).$(MANSEC)
	compress -f $(CATDIR)\$(PROGRAM).$(MANSEC)

ecatman: $(EMANCAT)
	$(INSTALL) $(EMANCAT) $(ECATDIR)\$(PROGRAM).$(MANSEC)
	$(CHMOD) a+r-x $(ECATDIR)\$(PROGRAM).$(MANSEC)

ecatman-b: $(PROGRAM).eng
	$(INSTALL) $(PROGRAM).eng $(ECATDIR)\$(PROGRAM).$(MANSEC)
	$(CHMOD) a+r-x $(ECATDIR)\$(PROGRAM).$(MANSEC)

ecompman: ecatman
	compress -f $(ECATDIR)\$(PROGRAM).$(MANSEC)

ecompman-b: ecatman-b
	compress -f $(ECATDIR)\$(PROGRAM).$(MANSEC)


############################################################
# to make dependency

depend: $(SRC) kanji.h funcno.h
	mv Makefile.in Makefile.in.bak
	makedepend -s "# DO NOT DELETE THIS LINE -- make depend depends on it."\
		-DFD=$(VERSION) \
		-f Makefile.tmp -- $(CFLAGS) -- $(SRC)
	rm -f Makefile.tmp.bak
	$(SED) -e '\^# DO NOT DELETE THIS LINE\,$$d' Makefile.in.bak\
		> Makefile.in
	$(ECHO) "# DO NOT DELETE THIS LINE -- make depend depends on it."\
		>> Makefile.in
	$(SED) -e '1,\^# DO NOT DELETE THIS LINE\d'\
		-e 's\\\[^ ]* *\\g'\
		-e 's\\.o\\_\_OBJ\_\_\g'\
		-e 's\ *$$\\'\
		-e '\: *$$\d' Makefile.tmp >> Makefile.in
	rm -f Makefile.in.bak Makefile.tmp


############################################################
# to make configuration file manually

config: Configur expfunc.c
	-if ($(ECHO) 't() { echo $1; }; t test' | $(SHELL) >\dev\null 2>&1); then \
		$(SED) -e "2,3d" -e "s:__cc__:lcc86:" Configur \
		| $(SHELL) > config.h; \
	else \
		if [ ! -f expfunc ]; then \
			$(HOSTCC) $(HOSTCFLAGS) -o expfunc expfunc.c; \
		fi; \
		$(SED) -e "2,3d" -e "s:__cc__:lcc86:" Configur \
		| .\expfunc | $(SHELL) > config.h; \
	fi


############################################################
# sample program for pseudo system(3)

sh: fdsh.exe

fdsh.exe: $(SOBJ)
	$(CC) -mp -h -k"-s 8000" -o $@ $(SOBJ) $(SLDFLAGS)
#	ren $@ fdsh
#	aout2exe fdsh
#	del fdsh

ssystem.obj: system.c machine.h config.h kctype.h pathname.h system.h
	$(CC) -DFDSH=$(VERSION) $(CFLAGS) -mp -h -k"-s 8000" $(CPPFLAGS) -c -o $@ system.c

sposixsh.obj: posixsh.c machine.h config.h kctype.h pathname.h system.h
	$(CC) -DFDSH=$(VERSION) $(CFLAGS) -mp -h -k"-s 8000" $(CPPFLAGS) -c -o $@ posixsh.c

sdoscom.obj: doscom.c machine.h config.h kctype.h pathname.h system.h
	$(CC) -DFDSH=$(VERSION) $(CFLAGS) -mp -h -k"-s 8000" $(CPPFLAGS) -c -o $@ doscom.c

spathnam.obj: pathname.c machine.h config.h pathname.h
	$(CC) -DFDSH=$(VERSION) $(CFLAGS) -mp -h -k"-s 8000" $(CPPFLAGS) -c -o $@ pathname.c


############################################################
# Bourne shell

bsh: fdbsh.exe

fdbsh.exe: $(BOBJ)
	$(CC) -ms -k"-s 8000" -o $@ $(BOBJ) $(SLDFLAGS)
#	ren $@ fdbsh
#	aout2exe fdbsh
#	del fdbsh

bsystem.obj: system.c machine.h config.h kctype.h pathname.h system.h
	$(CC) -DFDSH=$(VERSION) $(BCFLAGS) -ms -k"-s 8000" $(CPPFLAGS) -c -o $@ system.c

bdoscom.obj: doscom.c machine.h config.h kctype.h pathname.h system.h
	$(CC) -DFDSH=$(VERSION) $(BCFLAGS) -ms -k"-s 8000" $(CPPFLAGS) -c -o $@ doscom.c

bpathnam.obj: pathname.c machine.h config.h pathname.h
	$(CC) -DFDSH=$(VERSION) $(BCFLAGS) -ms -k"-s 8000" $(CPPFLAGS) -c -o $@ pathname.c


############################################################
# for programer's maintenance

GETVER	= HEAD="`tail -1 version.h`";\
	VER=`expr "$$HEAD" : '.*\([0-9][0-9]*\.[0-9a-z\-]*\).*'`

tar: $(SOURCES)
	($(GETVER);\
	tar cvf $(TITLE)"$$VER".tar $(SOURCES);\
	compress -f $(TITLE)"$$VER".tar)

shtar: $(SHSOURCES)
	(VER=`date '+%y%m%d'`;\
	tar cvf $(TITLE)sh-"$$VER".tar $(SHSOURCES);\
	gzip -f $(TITLE)sh-"$$VER".tar)

lzh: $(SOURCES)
	($(GETVER);\
	rm -f $(TITLE)"$$VER".lzh;\
	lha a $(TITLE)"$$VER".lzh $(SOURCES))

shar: $(SOURCES)
	($(GETVER);\
	rm -f $(TITLE)$$VER.shar.[0-9][0-9];\
	shar -L50 -apc -n $(TITLE)"$$VER" -o $(TITLE)"$$VER".shar \
	-C $(JSRCS) -T $(ESRCS))

ipk: $(PROGRAM).exe $(UNITBL)
	-[ -d $(IPKWDIR)\$(BINDIR) ] || mkdir -p $(IPKWDIR)\$(BINDIR)
	-[ -d $(IPKWDIR)\$(BINDIR) ] || mkdir -p $(IPKWDIR)\__DATADIR__
	-SYSCONFDIR=`dirname $(IPKWDIR)\$(DEFRC)`; \
	[ -d $$SYSCONFDIR ] || mkdir -p $$SYSCONFDIR
	-[ -d $(IPKWDIR)\CONTROL ] || mkdir -p $(IPKWDIR)\CONTROL
	-[ -d $(IPKTDIR) ] || mkdir -p $(IPKTDIR)
	cp -p $(PROGRAM).exe $(IPKWDIR)\$(BINDIR)
	-[ -z "$(STRIP)" ] || $(STRIP) $(IPKWDIR)\$(BINDIR)\$(PROGRAM).exe
	$(CHMOD) a+rx $(IPKWDIR)\$(BINDIR)\$(PROGRAM).exe
	-$(RM) $(IPKWDIR)\$(BINDIR)\$(FDSHELL).exe
	$(LN) $(IPKWDIR)\$(BINDIR)\$(PROGRAM).exe \
		$(IPKWDIR)\$(BINDIR)\$(FDSHELL).exe
	$(CHMOD) a+rx $(IPKWDIR)\$(BINDIR)\$(FDSHELL).exe
	$(SED) -e 's:#TMPDIR=.*:TMPDIR=\home\tmp:' \
		-e 's:#LANGUAGE=.*:LANGUAGE=euc:' \
		-e 's:#INPUTKCODE=.*:INPUTKCODE=euc:' \
		-e 's:#FNAMEKCODE=.*:FNAMEKCODE=utf8:' \
		-e '\# launcher definition\,\^$$\ {' \
		-e  '\^$$\ {' \
		-e   'i \' \
		-e   'launch ".ipk"	"gzip -cd %C|tar xOf - .\data.tar.gz|gzip -cd|tar tvf -" \\' \
		-e   'i \' \
		-e   '				"%a %u\%g %s %y-%m-%d %t %f"' \
		-e   'i \' \
		-e   'launch ".deb"	"ar -p %C data.tar.gz|gzip -cd|tar tvf -" \\' \
		-e   'i \' \
		-e   '				"%a %u\%g %s %y-%m-%d %t %f"' \
		-e  '}' \
		-e '}' \
		-e '\# archiver definition\,\^$$\ {' \
		-e  '\^$$\ {' \
		-e   'i \' \
		-e   'arch ".ipk"	"echo ERROR; false" \\' \
		-e   'i \' \
		-e   '		"gzip -cd %C|tar xOf - .\data.tar.gz|gzip -cd|tar xf - %TA"' \
		-e   'i \' \
		-e   'arch ".deb"	"echo ERROR; false" \\' \
		-e   'i \' \
		-e   '		"ar -p %C data.tar.gz|gzip -cd|tar xf - %TA"' \
		-e  '}' \
		-e '}' \
		-e '$$ {' \
		-e  'a \' \
		-e  'if [ " $$TERM" = " vt100" ]; then' \
		-e  'a \' \
		-e  '	if [ " $$CONSOLE" = " \dev\console" ]; then' \
		-e  'a \' \
		-e  '		keymap BS	"^?"' \
		-e  'a \' \
		-e  '		keymap INS	"\\033[2~"' \
		-e  'a \' \
		-e  '		keymap DEL	"\\033[3~"' \
		-e  'a \' \
		-e  '		keymap PPAGE	"\\033[5~"' \
		-e  'a \' \
		-e  '		keymap HOME	"\\033[H"' \
		-e  'a \' \
		-e  '		keymap END	"\\033[F"' \
		-e  'a \' \
		-e  '	else' \
		-e  'a \' \
		-e  '		keymap INS	"\\033[1~"' \
		-e  'a \' \
		-e  '		keymap HOME	"\\033[2~"' \
		-e  'a \' \
		-e  '		keymap PPAGE	"\\033[3~"' \
		-e  'a \' \
		-e  '		keymap END	"\\033[5~"' \
		-e  'a \' \
		-e  '	fi' \
		-e  'a \' \
		-e  'fi' \
		-e '}' \
	_fdrc > $(IPKWDIR)\$(DEFRC)
	$(CHMOD) a+r-x $(IPKWDIR)\$(DEFRC)
	-if [ -f $(UNITBL) ]; then \
		cp -p $(UNITBL) $(IPKWDIR)\$(BINDIR); \
		$(CHMOD) a+r-x $(IPKWDIR)\$(BINDIR)\$(UNITBL); \
	fi
	$(ECHO) "Package: fd" > $(IPKWDIR)\CONTROL\control
	$(ECHO) "Priority: optional" >> $(IPKWDIR)\CONTROL\control
	$(ECHO) "Section: extras" >> $(IPKWDIR)\CONTROL\control
	HEAD=`tail -2 version.h | head -1`; \
	DIST=`expr "$$HEAD" : '.*"\(.*\)".*'`; \
	DIST=$${DIST:-`whoami`@`hostname -d`}; \
	$(ECHO) "Maintainer: $$DIST" >> $(IPKWDIR)\CONTROL\control
	$(ECHO) "Architecture: arm" >> $(IPKWDIR)\CONTROL\control
	$(GETVER); \
	$(ECHO) "Version: $$VER-1" >> $(IPKWDIR)\CONTROL\control
	$(ECHO) "Depends: ncurses" >> $(IPKWDIR)\CONTROL\control
	$(ECHO) "Description: a file & directory maintenance tool." \
		>> $(IPKWDIR)\CONTROL\control
	(cd $(IPKWDIR); tar cf ..\data.tar --exclude=CONTROL .)
	(cd $(IPKWDIR)\CONTROL; tar cf ..\..\control.tar .)
	gzip .\data.tar
	mv .\data.tar.gz $(IPKTDIR)
	gzip .\control.tar
	mv .\control.tar.gz $(IPKTDIR)
	$(ECHO) "2.0" > $(IPKTDIR)\debian-binary
	(cd $(IPKTDIR); \
	tar cf ..\ipk.tar .\debian-binary .\data.tar.gz .\control.tar.gz)
	gzip .\ipk.tar
	$(GETVER); mv .\ipk.tar.gz .\fd_$$VER-1_arm.ipk
	-rm -rf $(IPKWDIR) $(IPKTDIR)

clean:
	-rm -f *.obj funcno.h kanji.h
	-rm -f kanjicnv.exe mkfuncno.exe expfunc.exe mkunitbl.exe
	-rm -f fdsh.exe fdbsh.exe
	-rm -f $(PROGRAM).exe $(PROGRAM).$(MANSEC) $(PROGRAM).$(MANSEC)c
	-rm -f $(PROGRAM).doc $(ARGS)
	-rm -f core $(UNITBL)
# DO NOT DELETE THIS LINE -- make depend depends on it.

main.obj: fd.h
main.obj: machine.h config.h
main.obj: pathname.h types.h term.h
main.obj: func.h
main.obj: dosdisk.h kanji.h
main.obj: version.h system.h
term.obj: machine.h config.h
term.obj: term.h
pathname.obj: fd.h
pathname.obj: machine.h config.h
pathname.obj: pathname.h types.h
system.obj: machine.h config.h kctype.h
system.obj: pathname.h
system.obj: system.h term.h
posixsh.obj: machine.h config.h kctype.h
posixsh.obj: pathname.h system.h
posixsh.obj: term.h
doscom.obj: machine.h config.h kctype.h
doscom.obj: pathname.h system.h
doscom.obj: term.h
dosdisk.obj: machine.h config.h
dosdisk.obj: dosdisk.h
dosemu.obj: fd.h
dosemu.obj: machine.h config.h
dosemu.obj: pathname.h types.h func.h
dosemu.obj: dosdisk.h kctype.h
unixdisk.obj: machine.h config.h
unixdisk.obj: unixdisk.h
unixdisk.obj: unixemu.h
unixdisk.obj: dosdisk.h
unixemu.obj: fd.h
unixemu.obj: machine.h config.h
unixemu.obj: pathname.h types.h func.h
unixemu.obj: dosdisk.h unixdisk.h
unixemu.obj: unixemu.h
libc.obj: fd.h
libc.obj: machine.h config.h
libc.obj: pathname.h types.h term.h
libc.obj: func.h
libc.obj: dosdisk.h kctype.h
libc.obj: kanji.h system.h
file.obj: fd.h
file.obj: machine.h config.h
file.obj: pathname.h types.h func.h
file.obj: dosdisk.h kctype.h
file.obj: kanji.h
apply.obj: fd.h
apply.obj: machine.h config.h
apply.obj: pathname.h types.h term.h
apply.obj: func.h
apply.obj: dosdisk.h kanji.h
parse.obj: fd.h
parse.obj: machine.h config.h
parse.obj: pathname.h types.h term.h
parse.obj: func.h
parse.obj: dosdisk.h kctype.h
builtin.obj: fd.h
builtin.obj: machine.h config.h
builtin.obj: pathname.h types.h term.h
builtin.obj: func.h
builtin.obj: dosdisk.h kctype.h
builtin.obj: funcno.h kanji.h system.h
shell.obj: fd.h
shell.obj: machine.h config.h
shell.obj: pathname.h types.h term.h
shell.obj: func.h
shell.obj: dosdisk.h kctype.h
shell.obj: kanji.h system.h
kanji.obj: machine.h config.h
kanji.obj: term.h kctype.h
kanji.obj: pathname.h
input.obj: fd.h
input.obj: machine.h config.h
input.obj: pathname.h types.h
input.obj: term.h func.h
input.obj: dosdisk.h kctype.h
input.obj: kanji.h system.h
info.obj: fd.h
info.obj: machine.h config.h
info.obj: pathname.h types.h term.h
info.obj: funcno.h kctype.h kanji.h
rockridg.obj: fd.h
rockridg.obj: machine.h config.h
rockridg.obj: pathname.h types.h func.h
rockridg.obj: dosdisk.h
archive.obj: fd.h
archive.obj: machine.h config.h
archive.obj: pathname.h types.h term.h
archive.obj: func.h
archive.obj: dosdisk.h kctype.h
archive.obj: kanji.h system.h
tree.obj: fd.h
tree.obj: machine.h config.h
tree.obj: pathname.h types.h term.h
tree.obj: func.h
tree.obj: dosdisk.h kanji.h
custom.obj: fd.h
custom.obj: machine.h config.h
custom.obj: pathname.h types.h
custom.obj: term.h func.h
custom.obj: dosdisk.h funcno.h
custom.obj: kctype.h kanji.h system.h
command.obj: fd.h
command.obj: machine.h config.h
command.obj: pathname.h types.h term.h
command.obj: func.h
command.obj: dosdisk.h funcno.h
command.obj: kctype.h kanji.h system.h
command.obj: functabl.h
browse.obj: fd.h
browse.obj: machine.h config.h
browse.obj: pathname.h types.h term.h
browse.obj: func.h
browse.obj: dosdisk.h funcno.h
browse.obj: kctype.h kanji.h
mkfuncno.obj: fd.h
mkfuncno.obj: machine.h config.h
mkfuncno.obj: pathname.h types.h functabl.h
mkmfsed.obj: fd.h
mkmfsed.obj: machine.h config.h
mkmfsed.obj: pathname.h types.h
