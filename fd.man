'\" t
.\"
.\" Copyright (c) 1995 Takashi SHIRAI
.\"                    <shirai@red.nintendo.co.jp>
.\"
.\" @(#)fd.1   1.00 08/07/95
.\"   fd - File & Directory maintenance tool
.TH FD 1 "August 7, 1995"
.de sh
.br
.PP
\fB\\$1\fR
.PP
..
.SH 名称
fd ¥- ファイル・ディレクトリ管理ツール
.SH 形式
.B fd
[
.BI ¥-SORTTYPE=
.I num
] [
.BI ¥-DISPLAYMODE=
.I num
] [
.BI ¥-SORTTREE=
.I bool
] [
.BI ¥-WRITEFS=
.I num
] [
.BI ¥-ADJTTY=
.I bool
] [
.BI ¥-COLUMNS=
.I num
] [
.BI ¥-MINFILENAME=
.I num
] [
.BI ¥-HISTSIZE=
.I num
] [
.BI ¥-SAVEHIST=
.I num
] [
.BI ¥-DIRCOUNTLIMIT=
.I num
] [
.BI ¥-TMPDIR=
.I dir
] [
.BI ¥-LANGUAGE=
.I lang
] [
.BI ¥-PAGER=
.I command
] [
.BI ¥-EDITOR=
.I command
] [
.BI ¥-SHELL=
.I command
] [
.I directory
]
.SH 解説
.B fd
は、
UNIX 汎用のテキスト端末用に考えられた、
ファイルやディレクトリの管理ツールです。
PC の AT 互換機と PC9801 専用に、
作られている同名ユーティリティのクローンを目指しています。
実際、機能的には上位互換となっています。

.B fd
を起動すると、ファイル一覧のブラウザ画面になりますので、
各コマンドを割当ててある各種キーの入力により、
様々な機能を実行することができます。
.sh オプション
各オプションは、後述の内部変数の設定に使用します。
ここで挙げられている以外にも任意の変数名が使用できますが、
.B fd
が解釈するものは挙げられているものに限ります。
.I directory
を指定すると、
起動直後にカレントディレクトリをそのディレクトリに移動します。
.sh 画面レイアウト
.B fd
の画面モードは、
大きく 3 つのモードに分けられます。
ブラウザ画面では、ファイルの一覧リストの中をブラウジングして、
各コマンドを実行していきます。
アーカイブブラウザ画面では、
アーカイブファイル内のファイルを、ディレクトリ階層別に一覧表示し、
ブラウザ画面と同様にブラウジングします。
ツリー表示画面では、ディレクトリの階層構造がツリー表示された中を、
移動してディレクトリパスを選択します。

どの画面モードでも、画面全体の上下各 3 行ずつは、
.B fd
の様々な情報を表示するために用いられます。
その画面レイアウトは、おおよそ次のようになっています。
.IP 行数 10
意味
.IP 1
タイトル行。
右端の時計は 10 秒毎に更新されます。
.IP 2
インフォメーション行。
表示ページ (及び最大ページ数)、マーク数 (及び全ファイル数)、
ソート形式、ファイル検索文字列の順で情報が書かれます。
.IP 3
パス行。
カレントディレクトリのフルパスが表示されます。
また、アーカイブブラウザ画面では、
アーカイブファイルのフルパスと、アーカイブ内パスが表示されます。
.IP "最下 - 2"
スタック行。
ファイルの並び替えを行なう際、
一時的にスタックに積んだファイルがここに表示されます。
.IP "最下 - 1"
ファンクション行。
ファンクションキーの機能が表示されます。
.IP 最下
ステイタス行。
カーソル位置のファイルに関するステイタスが表示されます。
また、コマンド実行の上で何らかの支障が生じた場合の
ウォーニングメッセージもここに表示されます。
.sh コマンド
.B fd
では以下の各コマンドが使用できます。
これらのコマンドのキー割当てはユーザにより変更可能ですが、
ここではデフォルトのキー割当てを添えます。
識別子は、キー割当てをユーザ定義する場合に用います。

.br
.ta 2i 5i
.nf
識別子	意味	キー

¥fBCUR_UP¥fP	カーソルを上に移動	¥fB↑¥fP(^P)
¥fBCUR_DOWN¥fP	カーソルを下に移動	¥fB↓¥fP(^N)
¥fBCUR_RIGHT¥fP	カーソルを右に移動	¥fB→¥fP(^B)
¥fBCUR_LEFT¥fP	カーソルを左に移動	¥fB←¥fP(^F)
¥fBROLL_UP¥fP	次の表示ページに切替え	¥fBPage Down¥fP(^C)
¥fBROLL_DOWN¥fP	前の表示ページに切替え	¥fBPage Up¥fP(^R)
¥fBCUR_TOP¥fP	カーソルを先頭に移動	¥fB<¥fP(^A)
¥fBCUR_BOTTOM¥fP	カーソルを最後尾に移動	¥fB>¥fP(^E)
¥fBFNAME_RIGHT¥fP	ファイル名表示範囲を右シフト	¥fB(¥fP
¥fBFNAME_LEFT¥fP	ファイル名表示範囲を左シフト	¥fB)¥fP
¥fBONE_COLUMN¥fP	画面表示を 1 列にする	¥fB1¥fP
¥fBTWO_COLUMNS¥fP	画面表示を 2 列にする	¥fB2¥fP
¥fBTHREE_COLUMNS¥fP	画面表示を 3 列にする	¥fB3¥fP
¥fBFUVE_COLUMNS¥fP	画面表示を 5 列にする	¥fB5¥fP
¥fBMARK_FILE¥fP	ファイルのマーク	¥fBTab¥fP
¥fBMARK_FILE2¥fP	ファイルのマークと下移動	¥fBSpace¥fP
¥fBMARK_ALL¥fP	全ファイルにマーク	¥fB+¥fP
¥fBMARK_FIND¥fP	検索したファイルにマーク	¥fB*¥fP
¥fBIN_DIR¥fP	サブディレクトリに移動	¥fBReturn¥fP
¥fBOUT_DIR¥fP	親ディレクトリに移動	¥fBBs¥fP
¥fBLOG_TOP¥fP	ルートディレクトリに移動	¥fB¥¥¥fP
¥fBREREAD_DIR¥fP	表示画面の再描画	¥fB^L¥fP
¥fBPUSH_FILE¥fP	ファイルをスタックに積む	¥fBDel¥fP(])
¥fBPOP_FILE¥fP	ファイルをスタックから取出す	¥fBIns¥fP([)
¥fBLOG_DIR¥fP	ディレクトリの絶対移動	¥fBl¥fP(F1)
¥fBEXECUTE_FILE¥fP	ファイルの実行	¥fBx¥fP(F2)
¥fBCOPY_FILE¥fP	ファイルのコピー	¥fBc¥fP(F3)
¥fBDELETE_FILE¥fP	ファイルの削除	¥fBd¥fP(F4)
¥fBRENAME_FILE¥fP	ファイル名の変更	¥fBr¥fP(F5)
¥fBSORT_DIR¥fP	ファイルのソート	¥fBs¥fP(F6)
¥fBFIND_FILE¥fP	ファイルの検索	¥fBf¥fP(F7)
¥fBTREE_DIR¥fP	ディレクトリのツリー表示	¥fBt¥fP(F8)
¥fBEDIT_FILE¥fP	ファイルの編集	¥fBe¥fP(F9)
¥fBUNPACK_FILE¥fP	アーカイブファイルの解凍	¥fBu¥fP(F10)
¥fBATTR_FILE¥fP	ファイル属性の変更	¥fBa¥fP(F11)
¥fBINFO_FILESYS¥fP	ファイルシステムの情報表示	¥fBi¥fP(F12)
¥fBMOVE_FILE¥fP	ファイルの移動	¥fBm¥fP(F13)
¥fBDELETE_DIR¥fP	ディレクトリの削除	¥fBD¥fP(F14)
¥fBMAKE_DIR¥fP	ディレクトリの作成	¥fBk¥fP(F15)
¥fBEXECUTE_SH¥fP	子プロセスの実行	¥fBh¥fP(F16)
¥fBWRITE_DIR¥fP	表示ディレクトリの書込み	¥fBw¥fP(F17)
¥fBBACKUP_TAPE¥fP	テープへのバックアップ	¥fBb¥fP(F18)
¥fBVIEW_FILE¥fP	ファイルの閲覧	¥fBv¥fP(F19)
¥fBPACK_FILE¥fP	ファイルの圧縮	¥fBp¥fP(F20)
¥fBLOG_TREE¥fP	ツリー選択でディレクトリ移動	¥fBL¥fP
¥fBCOPY_TREE¥fP	ツリー選択でファイルコピー	¥fBC¥fP
¥fBMOVE_TREE¥fP	ツリー選択でファイル移動	¥fBM¥fP
¥fBUNPACK_TREE¥fP	ツリー選択でファイル解凍	¥fBU¥fP
¥fBFIND_DIR¥fP	ディレクトリの検索移動	¥fBF¥fP
¥fBSYMLINK_MODE¥fP	symbolic リンク表示形式の切替	¥fBS¥fP
¥fBFILETYPE_MODE¥fP	ファイルタイプシンボルの切替	¥fBT¥fP
¥fBDOTFILE_MODE¥fP	ドットファイル非表示の切替	¥fBH¥fP
¥fBLAUNCH_FILE¥fP	ランチャの起動	¥fBRet¥fP
¥fBHELP_MESSAGE¥fP	ヘルプ画面の表示	¥fB?¥fP
¥fBQUIT_SYSTEM¥fP	fd の終了	¥fBq¥fP(Esc)

¥fBWARNING_BELL¥fP	ベルを鳴らします
¥fBNO_OPERATION¥fP	何もしません
.fi
.PP
最後の 2 つのコマンドは、
キー割当てを変更してデフォルトで割当てられた機能を殺したい時に使います。
.sh コマンド解説
各コマンドの詳細を以下で説明します。
同様な機能を持つコマンドは、
幾つかまとめて説明しています。
.RS 3
.IP "¥fBカーソル移動¥fP" 5
カーソルを移動します。
.IP "¥fB表示ページ切替え¥fP"
表示が一画面に収まらなかった場合に、
前後のページに移動します。
カーソル移動でページの外に移動しようとした場合にも、
ページ切替えになります。
.IP "¥fB先頭, 最後尾への移動¥fP"
カーソルをファイル一覧の先頭及び最後尾に移動します。
表示が一画面に収まらない場合は、ページの切替えも行なわれます。
.IP "¥fBファイル名表示範囲の変更¥fP"
ファイル名表示が規定のカラム内に収まらなかった場合、
カーソル位置のファイル名のみ、表示される部分を変更していくことができます。
それぞれ、一文字ずつ右と左にシフトさせて表示します。
ステイタス行の表示も同時にシフトされます。
.IP "¥fB画面表示列の変更¥fP"
通常は一画面 2 列の表示になっていますが、
この列の数をそれぞれの値に変更します。
列の数により、1 ファイル当たりのカラム数が変わるので、
表示されているファイル情報も変化します。
.IP "¥fBファイルのマーク¥fP"
カーソル位置のファイルにマークをします。
ディレクトリにはマークできません。
[¥fBSpace¥fP] の場合にはマークと同時にカーソルを下移動します。
また、[¥fB+¥fP] で全ファイルに、
[¥fB*¥fP] でワイルドカードにマッチしたファイルに、
それぞれマークされます。
ワイルドカード文字列は [¥fB*¥fP] を押した後でその都度入力します。

マークしたファイルは、
¥fBATTR_FILE¥fP ,
¥fBCOPY_FILE¥fP ,
¥fBDELETE_FILE¥fP ,
¥fBMOVE_FILE¥fP ,
¥fBUNPACK_FILE¥fP
及びユーザ定義のコマンドマクロ実行の際に対象となります。
.IP "¥fBカレントディレクトリの移動¥fP"
移動したいサブディレクトリのところにカーソルを移動し、
[¥fBReturn¥fP] を押すと、そのディレクトリに移動します。
親ディレクトリへは、".." のファイルにカーソル移動して [¥fBReturn¥fP] を押すか、
もしくは [¥fBBs¥fP] を押すことで移動できます。
また、[¥fB¥¥¥fP] でルートディレクトリへの絶対移動を行ないます。
.IP "¥fBファイルスタックへの積み下ろし¥fP"
[¥fBDel¥fP] を押すと、そのカーソル位置のファイルが一旦スタックに積まれ、
ファイル一覧の画面から一時的に削除されます。
スタックには 5 ファイルまで積むことができます。

スタックに積まれたファイルは、
[¥fBIns¥fP] でそのカーソル位置に挿入することができます。
最後にスタックに積んだファイルから順に取り出されます。
但し、この並びは
.B fd
の中で便宜上そう見えているだけで、
ディレクトリの移動等を行なえば元の並びに戻ります。
.IP "¥fB表示画面の再描画¥fP"
カレントディレクトリの情報を再度読み出し、
ファイル一覧の画面を再描画します。
起動中に他のプロセスからファイルの追加削除を行なった場合や、
何らかの理由により画面表示が乱れた場合などに有効です。

また、画面サイズの変更に際して
.B SIGWINCH
シグナルを発生しないような端末の場合 (HP-UXの
.BR "kterm" (1)
など) は、
画面サイズを変更した後には明示的に再描画させる必要があります。
.IP "¥fBディレクトリの絶対移動¥fP (Logdir)"
入力したパス名に、カレントディレクトリを移動します。
¥'/' で始まるパス名を入力すれば、相対移動でなく絶対移動になります。

パス名として "." を入力すると、
カレントディレクトリのパス名を絶対表記に改めます。
これ以外の移動では、リンク等の原因により、
カレントディレクトリは常に仮想的なパス名を示します。
また、"?" というパス名を入力すると、
.B fd
を起動した直前のカレントディレクトリに移動できます。
"-" というパス名を入力すると、
最後に訪れたディレクトリに移動できます。
.IP "¥fBファイルの実行¥fP (eXec)"
カーソル位置のファイル名に、
パラメータを追加して子プロセスとして実行します。
編集ラインのカーソル位置は、
実行権のあるファイルではファイル名の後に、
それ以外のファイルではファイル名の前に来ます。
それぞれ、適当なパラメータやコマンド名を補って下さい。
また、カーソルキーの上下で過去に実行したコマンド履歴の参照もできます。
.IP "¥fBファイルのコピー¥fP (Copy)"
カーソル位置のファイルを指定のディレクトリにコピーします。
カーソル位置がディレクトリだった場合には、
ディレクトリの中を再帰的にコピーできます。
マークされたファイルがある場合は、
カーソル位置のファイルではなくマークファイルが対象となります。

また、コピー先に同名ファイルが存在した場合、
「日付の新しいファイルを上書き」
「名前を変えてコピー」
「全て上書き」
「同名ファイルはコピーしない」
の中から処理を選択できます。
.IP "¥fBファイルの削除¥fP (Delete)"
カーソル位置のファイルを削除します。
ディレクトリは削除できません。
マークされたファイルがある場合は、
カーソル位置のファイルではなくマークファイルが対象となります。

書込み権のないファイルの場合には、安全のため確認を取ります。
.IP "¥fBファイル名の変更¥fP (Rename)"
カーソル位置のファイルのファイル名を変更します。
既に存在するファイルと同じ名前には変更できません。
また、新しいファイル名としてディレクトリ付きのパス名を指定すると、
ファイル移動も同時に行なわれることになります。
.IP "¥fBファイルのソート¥fP (Sort)"
カレントディレクトリ内のファイルをソートして表示します。
ソートのタイプは「名前順」「拡張子順」「サイズ順」「日付順」の中から選び、
更に「昇べき」「降べき」を指定します。
ソート前のソートタイプが「ソートしない」以外だった時は、
選択肢の中に「ソートしない」も含まれるようになります。
また、一度ソートした後に別のタイプでソートすると、
以前のソート結果を基準にしてソートし直します。
なお、このソートには指定したタイプ以外に優先順位があり、
「ソートしない」以外のソートタイプでは、
ディレクトリファイルは通常ファイルよりも常に先んじて並べられます。

但し、このソートは
.B fd
の中で便宜上そう見えているだけで、
ディレクトリの移動等を行なえば元の並びに戻ります。
.IP "¥fBファイルの検索¥fP (Find)"
ワイルドカードにマッチしたファイルだけを画面に表示するようにします。
先頭が '.' で始まるファイル名は、
¥'*' や '?' で始まるワイルドカードにマッチしません。
検索表示を解除したい場合は、ディレクトリを移動するか、
再度 ¥fBFIND_FILE¥fP を実行して空行を入力して下さい。

なお、検索表示中は ¥fBWRITE_DIR¥fP は実行できません。
.IP "¥fBディレクトリのツリー表示¥fP (Tree)"
カレントディレクトリを基準としたツリー構造を表示します。
ファイルシステム全体の構造をツリーで表すには時間がかかり過ぎるので、
最初は直系の親に当たるディレクトリと、
カレントディレクトリ直下のサブディレクトリのみ表示します。
直系の親に当たるディレクトリでは、
その他のサブディレクトリ(あった場合)を "¥fB...¥fP" で一括して表します。
このように一括表示されたサブディレクトリでは、
カーソルがその位置に来ると自動的に展開するようになっています。

まだその内部を展開していないサブディレクトリには、
ファイル名の後ろに '¥fB>¥fP' をつけてその旨を表記します。
このようなディレクトリは、明示的に展開を要求しない限りは展開しないので、
展開されていないサブディレクトリ下に移動したい場合は明示的に展開して下さい。

ツリー表示モードでは、以下のキー入力が有効です。
.RS
.IP "¥fB↑¥fP(^P), ¥fB↓¥fP(^N)" 16
カーソル移動
.IP "¥fB→¥fP(^F)"
カーソル位置のサブディレクトリの展開
.IP "¥fBTab¥fP"
カーソル位置のサブディレクトリの展開(再帰的)
.IP "¥fBPage Up¥fP(^C,^V), ¥fBPage Down¥fP(^R,^Y)"
半画面分のカーソル移動
.IP "¥fB<¥fP(^A), ¥fB>¥fP(^E)"
ツリーの先頭、最後尾にカーソル移動。
.IP "¥fB?¥fP"
カレントディレクトリにカーソル移動。
.IP "¥fB←¥fP(^B), ¥fBBs¥fP"
親ディレクトリにカーソル移動。
.IP "¥fB(¥fP, ¥fB)¥fP"
同じ階層のサブディレクトリで、前(次)のディレクトリにカーソル移動。
.IP "¥fBA¥fP - ¥fBZ¥fP"
そのキーの文字及びその子文字を頭文字とするような
名前を持つディレクトリにカーソル移動。
.IP "¥fB^L¥fP"
ツリー構造の再描画
.IP "¥fBReturn¥fP"
ディレクトリの選択
.IP "¥fBEsc¥fP"
キャンセル
.RE
.PP
.RS
なお、再帰的にディレクトリの展開を行なっている時など、
マシンの処理が遅くてフリーズしているように見える場合があるかも知れません。
このような場合には、処理中に何らかのキーを入力して下さい。
ディレクトリの展開中にキー入力を認めた場合、
途中であってもその時点でディレクトリの展開を中止します。
キーリピートが効き放しになった場合でも、
この機能のおかげで処理が溜らないようになっています。
.RE
.IP "¥fBファイルの編集¥fP (Editor)"
カーソル位置のファイルを編集します。
編集に用いるエディタは、内部変数
.B EDITOR
を参照して用いますが、
内部変数が未定義の場合には環境変数
.B EDITOR
を参照します。
.IP "¥fBアーカイブファイルの解凍¥fP (Unpack)"
カーソル位置のアーカイブファイルを指定ディレクトリ先に解凍します。
デフォルトでは、tar ファイルとその圧縮ファイル及び lha 圧縮ファイルしか
解凍できませんが、初期設定ファイルに記述することで、
これ以外のアーカイバにも対応できるようになります。
.IP "¥fBファイル属性の変更¥fP (Attr)"
カーソル位置のファイルの、
ファイルアクセスモードとタイムスタンプを変更します。
マークされたファイルがある場合は、
カーソル位置のファイルではなくマークファイルが対象となります。
マークファイルの場合は、
モードかタイムスタンプかのどちらかを選んでから、
入力したものを一括変更することになります。

モードの入力は、カーソルキーで変更したい位置へカーソルを移動し、
[¥fBSpace¥fP] でその位置の属性を反転させます。
実行ビットの属性は、2 値のトグルではなく、
それぞれ setuid ビット、setgid ビット、
sticky ビットを含んだ 3 値のトグルになっていますので注意して下さい。
タイムスタンプの入力は、変更したい位置にカーソルを持っていって、
数値を入力するだけです。
最終的に、[¥fBReturn¥fP] を押した時点で実行されます。
中断する場合は [¥fBEsc¥fP] です。
日付の範囲チェックは完全ではありませんので気をつけて下さい。

なお、[¥fBa¥fP](Attr), [¥fBd¥fP](Date), [¥fBt¥fP](Time) を入力すると、
各々の入力ラインの先頭位置にカーソル移動します。
.IP "¥fBファイルシステムの情報表示¥fP (Info)"
指定されたファイルシステムの情報を表示します。
入力されたパスがファイルシステムを表すスペシャルファイルでなかった場合は、
そのパスを含むファイルシステムの情報を示します。
.IP "¥fBファイルの移動¥fP (Move)"
カーソル位置のファイルを指定のディレクトリに移動します。
カーソル位置がディレクトリだった場合には、
ディレクトリそのものを移動します。
マークされたファイルがある場合は、
カーソル位置のファイルではなくマークファイルが対象となります。

移動先に同名ファイルが存在した場合、
¥fBCOPY_FILE¥fP 同様、処理の選択ができます。
また、移動先が異なるファイルシステムの場合は、
単にコピーと削除を連続して実行しますが、
この場合ディレクトリの移動はできません。
.IP "¥fBディレクトリの削除¥fP (rmDir)"
カーソル位置のディレクトリファイルを、
再帰的に削除します。
但し、ディレクトリが symbolic リンクの場合には、
リンクの削除のみ行ない、リンク先のディレクトリには影響を与えません。
.IP "¥fBディレクトリの作成¥fP (mKdir)"
カレントディレクトリの下にサブディレクトリを作成します。
入力したサブディレクトリ文字列に、
パス名セパレータである '/' が含まれていた場合、
最終的にその文字列で示されるディレクトリが作成されるまで、
再帰的にディレクトリを作成します。

¥'/' で始まるパス名を入力すれば、
カレントディレクトリ下でなく、
表される絶対パスにディレクトリを作成します。
.IP "¥fB子プロセスの実行¥fP (sHell)"
入力されたコマンド文字列を
.BR "sh" (1)
に渡して子プロセスとして実行させます。
¥fBEXECUTE_FILE¥fP と同様にコマンド履歴の参照もできます。
また、何も入力せずに [¥fBReturn¥fP] のみ入力すると、
内部変数もしくは環境変数
.B SHELL
の指すユーザシェルを起動します。
この場合、
.B fd
に戻るためには "¥fBexit¥fP" と入力して下さい。

コマンド文字列が '!' から始まっていた場合のみ、
組込みコマンドの実行モードになります。
¥'!' に続けて記述できる組込みコマンドの詳細は、
`¥fB組込みコマンド¥fP' の項を参照して下さい。
.IP "¥fB表示ディレクトリの書込み¥fP (Write)"
現在表示されているディレクトリの書込みをします。
ディレクトリエントリ上のファイル間の隙間も詰めて書込まれます。
¥fBPUSH_FILE¥fP , ¥fBPOP_FILE¥fP や ¥fBSORT_DIR¥fP で
並び替えた後であれば、その結果を書込むことになります。

表示ディレクトリがホームディレクトリ下の階層に属していなかった場合、
安全のため、他のユーザが利用していないかどうかの確認を求めます。
セキュリティ上不安定なので、
NFS マウントされたディレクトリや一部の特殊ディレクトリ上では書込みできません。

また、並び替えを行なった後に、
ファイルの並びが崩れるようなコマンドを実行した際には、
そのコマンド実行の直前に、
書込みを行なうかどうかを確認してきますので、
明示的にこの書込みコマンドを実行しなくても
ディレクトリの書込みを行なうことがあります。
但し、これは表示ディレクトリがホームディレクトリ下にあった場合に限ります。
.IP "¥fBテープへのバックアップ¥fP (Backup)"
カーソル位置のファイルを指定デバイスの記録装置にバックアップします。
カーソル位置がディレクトリだった場合には、
その中身を全て保存します。
マークされたファイルがある場合は、
カーソル位置のファイルではなくマークファイルが対象となります。

バックアップには
.BR "tar" (1)
を用います。
デバイス名の入力の際に、デバイスを示すスペシャルファイル以外を与えた場合、
アーカイブファイルを作成します。
.IP "¥fBファイルの閲覧¥fP (View)"
カーソル位置のファイルを閲覧します。
閲覧に用いるページャは、
内部変数
.B PAGER
を参照して用いますが、
内部変数が未定義の場合には環境変数
.B PAGER
を参照します。	
.IP "¥fBファイルの圧縮¥fP (Pack)"
カーソル位置のファイルを指定のアーカイブファイルに圧縮します。
カーソル位置がディレクトリだった場合には、
その中身を全てアーカイブファイルに入れます。
マークされたファイルがある場合は、
カーソル位置のファイルではなくマークファイルが対象となります。

入力したアーカイブファイルの拡張子を見て、
それぞれに応じたアーカイバを自動的に選択します。
デフォルトでは、
tar ファイルとその圧縮ファイル及び lha 圧縮ファイルにしか圧縮できませんが、
初期設定ファイルに記述することで、
これ以外のアーカイバにも対応できるようになります。

但し、
.BR tar (1)
を用いる場合は、
一度に渡せるパラメータ長の限界のせいで、
たくさんのファイルを一度に圧縮することができない場合があります。
そのような場合は、
¥fBBACKUP_TAPE¥fP を用いてアーカイブファイルを作成して下さい。
.IP "¥fBツリーを用いたファイル操作¥fP"
[¥fBL¥fP], [¥fBC¥fP], [¥fBM¥fP], [¥fBU¥fP] を押すと、
パス名の入力の際に、
文字列を入力する代わりにツリー構造の中から選択させることができます。
それぞれ、
¥fBLOG_DIR¥fP ,
¥fBCOPY_FILE¥fP ,
¥fBMOVE_FILE¥fP ,
¥fBUNPACK_FILE¥fP
と同等の機能のコマンドが実行されます。
.IP "¥fBファイルの検索移動¥fP"
ワイルドカードにマッチするファイルを、
カレントディレクトリから下に階層的に検索し、
見つかったファイルのあるディレクトリに移動します。
カーソル位置がディレクトリだった場合は、
カレントディレクトリでなく、カーソル位置のディレクトリの下を検索します。

マッチした個々のファイルに対し、
そこに移動するかどうかを確認してきますので、
目的のファイルが表示されるまでは [¥fBn¥fP](No) を選択して下さい。
.IP "¥fBsymbolic リンク表示形式の切替え¥fP"
ファイル表示欄やステイタス行に表示されるファイル情報は、
symbolic リンクファイルの場合には、
リンク先の本体ではなくリンクファイルのものになっています。
これを、トグルスイッチでリンク先本体の情報を参照するように切替えます。

リンク本体情報参照モードでは、
ファンクション行の左端に 'S'(Symbolic Link) と表示されます。
.IP "¥fBファイルタイプシンボル表示の切替え¥fP"
.BR ls (1)
コマンドの -F オプションでの表示と同様に、
ファイル一覧リストのファイル名の欄に、
そのファイルのタイプを表すシンボル文字を付加して表示します。
トグルスイッチでシンボルの表示非表示を切替えます。
各シンボルの意味は以下のとおり。
.RS 10
.ta 0.5i
.nf
¥fB/¥fP	ディレクトリ
¥fB@¥fP	シンボリックリンク
¥fB*¥fP	実行可能ファイル
¥fB=¥fP	ソケット
¥fB|¥fP	FIFO
.fi
.RE

.RS
ファイルタイプ表示モードでは、
ファンクション行の左端に 'T'(Type) と表示されます。
.RE
.IP "¥fBドットファイル表示非表示の切替え¥fP"
¥'.' で始まるファイル名のファイルを、
ファイル一覧内に表示しないようにします。
トグルスイッチでドットファイルの表示非表示を切替えます。

ドットファイル非表示モードでは、
ファンクション行の左端に 'H'(Hidden) と表示されます。
.IP "¥fBランチャの起動¥fP"
サブディレクトリ以外のカーソル位置で [¥fBReturn¥fP] を押すと、
それぞれのファイル拡張子に応じた動作をします。
デフォルトでは、
tar ファイルとその圧縮ファイル及び lha 圧縮ファイルに対し、
アーカイブブラウザが登録されています。
初期設定ファイルに記述することで、
これ以外のコマンドもランチャとして登録することができます。

カーソル位置が未登録の拡張子のファイルだった場合は、
¥fBVIEW_FILE¥fP と同じ挙動を示します。
アーカイブブラウザ画面でも、
登録ランチャは有効に機能し、
再帰的にアーカイブブラウザを起動することも可能です。
.IP "¥fBヘルプ画面の表示¥fP"
現在のキー割当てとそのコマンド内容を一覧表示します。
一画面に収まりきらない場合は一画面分の表示で一旦キー入力を待ちます。
.IP "¥fBfdの終了¥fP (Quit)"
.B fd
を終了します。
.RE
.sh 組込みコマンド
.B fd
では以下の組込みコマンドが用意されています。
これらの組込みコマンドは、
¥fBEXECUTE_SH¥fP や初期設定ファイルの中で用いることができます。
.IP "¥fB!¥fP¥fINAME=[value]¥fR" 14
.B fd
内でのみ有効の内部変数の定義を行ないます。
内部変数
.I NAME
に値(文字列)
.I value
を代入します。

.I value
を省略すると、内部変数
.I NAME
の定義を削除します。
内部定数値としてナルを登録したい時には、
.I value
として ¥fB""¥fP を指定します。
.IP "¥fB!¥fP'¥fIc¥fR' [¥fIcom1¥fR [¥fIcom2¥fR]] [¥fI;comment¥fR]"
キー
.I " c
に対して、コマンド
.I com1
を割当てます。
.I c
にコントロール文字を指定したい場合は、
.B ^
を冠して "'^A'" のように 2 文字で記述します。
ファンクションキーを指定したい場合は、
.B F
を冠して "'F10'" のように文字列で記述することで、
¥'F1' から 'F20' までが割当て可能です。
.B fd
の持つ各コマンド機能の割当ては、コマンド識別子をそのまま記述します。
シェルコマンドをマクロ表記で定義する場合は、
¥fB"¥fP で括った文字列を記述します。
.I com2
を省略せずに記述すると、
カーソル位置がディレクトリだった場合に
.I com2
の方を実行します。
キー
.I " c
が 'F1' から 'F10' のファンクションキーの場合、
コマンドの記述に続いて
.B ;
を冠して
.I comment
を記述すると、
ファンクション行の該当部分の表示を
.I comment
に変更できます。

.I com1, com2
共に省略すると、
キー
.I " c
に対するキー割当て登録を削除します。
.IP "¥fB!¥fP""¥fIext¥fR"" [¥fIcom¥fR [¥fIformat¥fR]]"
拡張子
.I ext
に対する挙動をランチャとして登録します。
.I com
にはシェルコマンドのマクロ表記を ¥fB"¥fP で括って記述します。
アーカイブブラウザを登録する場合には、
.I com
にはアーカイブファイルの一覧表示のためのシェルコマンドを記述し、
.I format
に一覧表示形式のフォーマットを記述します。

.I com
を省略すると、拡張子
.I ext
に対するランチャ登録を削除します。
.IP "¥fB!¥fP""¥fIext¥fR"" ¥fBA¥fP [¥fIpack unpack¥fR]"
拡張子
.I ext
のアーカイブファイルに対するアーカイバコマンドを登録します。
.I pack
には圧縮時のシェルコマンドを、
.I unpack
には解凍時のシェルコマンドを、
それぞれ ¥fB"¥fP で括ったマクロ表記で記述します。

.I pack, unpack
共に省略すると、拡張子
.I ext
に対するアーカイバ登録を削除します。
.IP "¥fB!export¥fP ¥fINAME=value¥fR"
環境変数
.I NAME
に値(文字列)
.I value
を代入します。
この環境変数は、
.B fd
から子プロセスとして呼ばれるシェルコマンドに継承されます。

.I value
を省略すると、環境変数
.I NAME
の定義を削除します。
環境変数値としてナルを登録したい時には、
.I value
として ¥fB""¥fP を指定します。
.IP "¥fB!alias¥fP [¥fIname¥fR [¥fIcom¥fR]]"
コマンド
.I com
の別名として
.I name
をエイリアス定義します。
定義されたエイリアスは、
¥fBEXECUTE_SH¥fP の入力ラインのほか、
上記のコマンドマクロ内に用いることができます。
エイリアスによる置換は再帰的には行なわれません。
.I com
を省略すると、
.I name
のエイリアスを表示します。
.I name
も省略すると、現在定義されている全てのエイリアスを一覧表示します。
.IP "¥fB!unalias¥fP ¥fIname¥fR"
エイリアス
.I name
の定義を取消します。
.I name
にはワイルドカードを用いることが可能で、
その場合にはマッチする全てのエイリアス定義を取消します。
"*" を指定すれば、全エイリアス定義が無効になります。
.IP "¥fB!source¥fP ¥fIfile¥fR"
設定ファイル
.I file
を読み込んで評価します。
設定ファイルの書式は初期設定ファイルに準拠します。
設定ファイル内で入れ子にしてファイルを読み込ませることもできます。
.IP "¥fB!printenv¥fP"
内部変数定義を一覧表示します。
.IP "¥fB!printmacro¥fP"
キー割当てされているコマンドのうち、
.B fd
の持つ各コマンドではなく、
シェルコマンドのマクロとして定義されているものの一覧を表示します。
.B fd
の持つ各コマンドのキー割当ては、
¥fBHELP_MESSAGE¥fP で参照できます。
.IP "¥fB!printlaunch¥fP"
ランチャとして登録されている、
拡張子とコマンドマクロの対応を一覧表示します。
アーカイブブラウザとして登録されているものについては、
後ろに文字列
.I `(Arch)'
を添えます。
.IP "¥fB!printarch¥fP"
アーカイバコマンドとして登録されている、
拡張子とコマンドマクロの対応を一覧表示します。
.IP "¥fB!history¥fP"
履歴番号を添えてコマンド履歴を一覧表示します。
.IP "¥fB!¥fP¥fInum¥fR"
数値
.I num
で表される履歴番号のコマンドを実行します。
.I num
が負数だった場合は、現在の履歴番号から相対的に数えて
.I num
番目の履歴番号のコマンドを実行します。
.IP "¥fB!!¥fP"
直前のコマンドを実行します。
.B !-1
と同義です。
.IP "¥fB!cd¥fP"
.B fd
内のカレントディレクトリを移動します。
キーマクロとして "¥fI!cd $HOME¥fR" などと定義しておくと便利でしょう。
パス名として ".", "?", "-" を指定すると、
¥fBLOG_DIR¥fP と同様の挙動が得られます。
.PP
但し、
.B printenv
以降の組込みコマンドは、
初期設定ファイル内で実行することはできません。
また、上記の各登録文字列内の ¥fB‾¥fP や ¥fB$¥fP は展開されますが、
¥fB"¥fP の代わりに ¥fB'¥fP で括られた文字列内では、
これらの展開が抑制されます。
.sh アーカイブブラウザ
アーカイブブラウザの登録されている拡張子のファイル位置でランチャを起動すると、
アーカイブブラウザ画面になります。
この画面では、通常のディレクトリ内と同じように、
アーカイブファイル内のファイルをブラウジングしていくことができます。
但し、この画面では以下のコマンドは使用できません。
.PP
.RS
.ta 1.5i 3i 4.5i 6i
.nf
.ft B
LOG_TOP	PUSH_FILE	POP_FILE	LOG_DIR
ATTR_FILE	COPY_FILE	MOVE_FILE	DELETE_FILE
DELETE_DIR	RENAME_FILE	MAKE_DIR	WRITE_DIR
TREE_DIR	BACKUP_TAPE	EDIT_FILE	PACK_FILE
LOG_TREE	COPY_TREE	MOVE_TREE	FIND_DIR
SYMLINK_MODE	DOTFILE_MODE
.ft R
.fi
.RE

また、新しいアーカイブブラウザを登録したい場合、
以下のような書式でアーカイバの一覧表示形式のフォーマットを記述してやる
必要があります。
このフォーマット文字列ひとつで、
一覧表示の 1 行分の表示形式を表すことになります。
.PP
.ta 1i 2i 3i 4i
.RS
"¥fIt, b¥fR:
¥fIf1, f2, f3, f4, f5, f6, f7, f8, f9¥fR
[: ¥fIs1, ...¥fR]"
.PP
.nf
¥fIt¥fR	一覧の先頭行からの不必要な行の行数
¥fIb¥fR	一覧の最終行からの不必要な行の行数
¥fIf1¥fR	ファイルモードを表す文字列範囲の記述
¥fIf2¥fR	ファイルの UID を表す数値文字列範囲の記述
¥fIf3¥fR	ファイルの GID を表す数値文字列範囲の記述
¥fIf4¥fR	ファイルサイズを表す数値文字列範囲の記述
¥fIf5¥fR	ファイル作成年を表す数値文字列範囲の記述
¥fIf6¥fR	ファイル作成月を表す文字列範囲の記述
	(表示は数値でも英字 3 文字表記でもどちらでも可。)
¥fIf7¥fR	ファイル作成日を表す数値文字列範囲の記述
¥fIf8¥fR	ファイル作成時間を表す文字列範囲の記述
	(表示は "HH:MM:SS" 形式。分や秒はなくても可。)
¥fIf9¥fR	ファイル名を表す文字列範囲の記述
¥fIs1, ...¥fR	強制フィールドセパレータの位置
.fi
.RE
.PP
ここでは、
「フィールド」とは空白文字またはタブ文字で分けられている領域のことを指します。
各情報を表す文字列の範囲を表現する際に、
空白文字やタブ文字では分離できない場合、
境界となる位置を行頭からの文字数で ¥fIs1, ...¥fR に記述し、
その位置を強制的にフィールドの境界と見なすことにします。
強制セパレータ位置は無条件でフィールド境界になるので、
この位置に空白文字やタブ文字があったとしても、
やはりフィールド境界になります。
この強制セパレータ位置の記述は、
ひとつのフォーマット文字列につき
.B 3
箇所まで有効です。
空白文字とタブ文字だけで完全に分けられるような場合は、
¥':' も含めて ¥fIs1¥fR 以降の記述は必要ありません。

各文字列範囲の記述は、以下のように表現されます。
.IP
¥fIf?¥fR = "¥fIstart¥fR[-¥fIend¥fR]"
.PP
¥fIstart¥fR は、
文字列の開始位置を示します。
丁度フィールド境界に開始位置が来る場合は、
単に行頭から数えたフィールドの順番を記述します。
第 ¥fIn¥fR フィールドの中で文字 ¥fIc¥fR の後ろから始まるという場合は、
"¥fIn¥fR'¥fIc¥fR'" と記述します。
また、その情報を表す文字列が存在しない場合には、
0 を記述しておきます。

¥fIend¥fR は、
文字列の終了位置を示します。
丁度フィールド境界に終了位置が来る場合は、
¥'-' も含めて何も記述する必要はありません。
フィールド開始位置から文字 ¥fIc¥fR の直前までという場合は、
"'¥fIc¥fR'" と記述します。
フィールドの開始位置から数えて ¥fIn¥fR 文字目までという場合には、
単にその数値 ¥fIn¥fR を記述します。

例として、幾つかのアーカイバの一覧表示形式のフォーマットを、
この書式で記述して挙げておきます。
.IP "`¥fBlha l¥fP'" 18
"2,2: 1, 2-'/', 2'/', 3,0,5,6,7,8"
.IP "`¥fBtar tvf¥fP' (BSD)"
"0,0: 1-9, 2-'/', 1'/', 2,6,3,4,5,7:10"
.IP "`¥fBtar tvf¥fP' (SVR4)"
"0,0: 1, 2-'/', 2'/', 3,7,4,5,6,8"
.PP
以上のフォーマットを用いて、
¥fBEXECUTE_SH¥fP の組込みコマンドもしくは
初期設定ファイルによって登録を行なえば、
デフォルトで用意してあるアーカイブブラウザ以外も使用できるようになります。
但し、アーカイブファイル内のファイルを実行したり閲覧したりするためには、
そのアーカイブファイル用のアーカイバコマンドも登録しておく必要がありますので、
注意して下さい。

一部の OS では、
環境変数
.B LANG
に
.I japanese
を指定しておくと、
タイムスタンプの表示に "HH時 MM分 SS秒" という
日本語混在の出力をする
.BR "tar" (1)
が存在します。
このような表示形式は
.B fd
では解析できないので、
この場合は初期設定ファイルで
.I `export LANG=C'
としておくと良いでしょう。
.sh 文字列の入力
パス名などの文字列を入力する場合には、
以下のキー入力が有効です。
.IP "¥fB←¥fP(^B), ¥fB→¥fP(^F)" 16
カーソル移動
.IP "¥fB↑¥fP(^P), ¥fB↓¥fP(^N)"
これまでの実行コマンド履歴の参照。
またはカーソル移動。
.IP "¥fB^A¥fP"
文字列の先頭にカーソル移動
.IP "¥fB^E¥fP"
文字列の最後尾にカーソル移動
.IP "¥fBDel¥fP(^D)"
カーソル位置の一文字を消去
.IP "¥fBBs¥fP"
カーソル直前の一文字を消去
.IP "¥fB^K¥fP"
カーソル以降の文字列全てを消去
.IP "¥fBTab¥fP"
カーソル位置でパス名の補完
.IP "¥fBReturn¥fP"
入力決定
.IP "¥fBEsc¥fP"
キャンセル
.PP
また、入力された文字列は、評価される直前に以下のような展開が行なわれます。
この展開は、コマンドマクロの文字列中でも有効です。
.IP "¥fB‾¥fP" 8
ファイル名の先頭にあって、ユーザ本人のホームディレクトリを指します。
.IP "¥fB‾¥fP¥fIuser¥fR"
ファイル名の先頭にあって、
.I user
のホームディレクトリを指します。
.IP "¥fB$¥fP¥fINAME¥fR"
.br
.ns
.IP "¥fB${¥fP¥fINAME¥fR¥fB}¥fP"
内部変数、または環境変数
.I NAME
の値を指します。
重複して定義されている場合は、内部変数の方が優先します。
どちらにも未定義だった場合はナルに置き換わります。
中括弧 
.B { }
は
.I NAME
を後続の文字から分離します。
.sh パラメータマクロ
コマンドマクロの登録、及びシェルコマンド実行用に入力する文字列内では、
以下のパラメータマクロが使用できます。
.IP "¥fB%C¥fP" 8
カーソル位置のファイル名。
但し、アーカイバコマンド登録用マクロではアーカイブファイルを指します。
.IP "¥fB%X¥fP"
カーソル位置のファイル名の拡張子を除いた部分。
但し、アーカイバコマンド登録用マクロではアーカイブファイル
の拡張子を除いた部分を指します。
拡張子は最後尾の一個だけ除かれます。
また、%X に続けて T, TA, M を記述すると、
それぞれ %T, %TA, %M の拡張子を除いた部分になります。
.IP "¥fB%P¥fP"
カレントディレクトリのパス名。
.IP "¥fB%K¥fP"
シェルコマンド終了後、キー入力を待たずに
.B fd
に戻ります。
但し、内部変数(環境変数)
.B EDITOR
と
.B PAGER
にパラメータマクロを書く場合は %K の意味は逆になり、
デフォルトではキー入力を待ちません。
ランチャのアーカイブブラウザ登録用マクロや、
アーカイバコマンド登録用マクロでは、
無条件にキー入力待ちをしません。
.IP "¥fB%T¥fP"
マークファイルを可能な限り空白で区切って羅列します。
ファイルが多くてコマンド行が 1023 文字を越えるような場合には、
残りのマークファイルは無視されます。
.IP "¥fB%TA¥fP"
%T と同様にマークファイルを羅列しますが、
コマンド行から溢れたファイルは、
再度同じコマンドを実行することで、
マークの最後までファイル名が渡されます。
.IP "¥fB%M¥fP"
マークファイルを一個ずつ渡し、
マークの数だけ同じコマンドを順々に実行します。
¥fBMARK_FIND¥fP で検索マークしてから、
¥fBEXECUTE_SH¥fP で "mv %M %XM.bak" などとすると便利でしょう。
.IP "¥fB%N¥fP"
パラメータが省略された場合のファイル名の追加を抑制します。
.IP "¥fB%R¥fP"
マクロ実行時に、コマンド文字列の長さに余裕があれば、
追加でパラメータを手入力するようにします。
入力時のカーソル位置は、マクロ中で %R のあった位置になります。
但し、
ランチャのアーカイブブラウザ登録用マクロや、
アーカイバコマンド登録用マクロ、
及び ¥fBEXECUTE_FILE¥fP , ¥fBEXECUTE_SH¥fP では、
%R は無視されます。
.PP
コマンドマクロ内でパラメータマクロを展開した結果、%C や %T
などによるファイル名パラメータが一つも渡されなかった場合、
自動的に展開された文字列の最後尾には、
カーソル位置のファイル名が追加されます。
シェルコマンド実行用の入力文字列の場合、
もしくは %N マクロがあった場合には、
そのようなファイル名の追加は行なわれません。
.sh カスタマイズ
.B fd
のカスタマイズには、以下のような方法があり、
複数の方法で重複して指定された場合には、この順で優先されることになります。
.RS 3
.IP "¥fBEXECUTE_SH の組込みコマンド実行¥fP" 10
¥'!' を冠して組込みコマンドを実行することで、
内部変数定義、環境変数定義、
キー割当て、ランチャ登録、アーカイバ登録が可能です。
.IP "¥fBコマンドラインパラメータ¥fP"
コマンドラインのパラメータに、
.I `-NAME=value'
の形式で値を渡すことにより、
内部変数の定義が可能です。
.IP "¥fB.fdrc¥fP"
実行ユーザのホームディレクトリにある初期設定ファイル
.B .fdrc
に記述しておくことで、
内部変数定義、環境変数定義、設定ファイル読込み、
キー割当て、ランチャ登録、アーカイバ登録が可能です。
各定義や登録の書式は、
¥fBEXECUTE_SH¥fP の場合と同じですが、
¥'!'を冠する必要はありません。
なお、行頭が '#' または ';' で始まる行、
及び空行は無視されます。

また、
.B .fdrc
の読込みに先だって、
システム管理者による初期設定ファイル
.B /etc/fdrc
が読込まれます。
このファイルがある場合、
.B .fdrc
で意図的に登録を削除しない限り、
システム管理者の用意した初期設定が有効になります。
.IP "¥fB環境変数¥fP"
内部変数に定義して有効な変数は、
予め環境変数として定義しておいても有効です。
但し、
.B fd
内では常に内部変数の方が優先されます。
また、
同じ名前の環境変数が他のアプリケーションでも使われている場合、
.B fd
用に別の定義をしておきたければ、
各々の環境変数名の前に
.B FD_
の 3 文字を冠したものも同じ用途に使用できます。
この
.B FD_
を冠した環境変数は、冠していない環境変数よりも常に優先されるので、
.B FD_
のない内部変数の定義よりも、
.B FD_
を冠した環境変数の方が有効になります。
.RE

.SH 環境変数
.B fd
では以下の環境変数が有効です。
これらの環境変数は、すべて内部変数として定義することも可能です。
また、コマンドラインパラメータとして与えることもできます。
.IP "¥fBSORTTYPE¥fP" 14
ブラウザ画面のファイル一覧リストは、
デフォルトではソートしないようになっていますので、
ディレクトリ内に登録されている順に並べられています。
これを、デフォルトでソートするように定義します。
設定する値は以下のとおり。
.RS 18
.ta 0.5i 1i 2i 2.5i 3i
.nf
¥fB0¥fP	ソートしない
¥fB1¥fP	名前順	¥fB9¥fP	名前順(逆順)
¥fB2¥fP	拡張子順	¥fB10¥fP	拡張子順(逆順)
¥fB3¥fP	サイズ順	¥fB11¥fP	サイズ順(逆順)
¥fB4¥fP	日付順	¥fB12¥fP	日付順(逆順)
¥fB100-112¥fP	直前のソート形式を保持
.fi
.RE
.RS

100 〜 112 の値を設定した場合、
起動直後は下 2 桁で表される数値のソート形式になりますが、
ディレクトリ移動などの際にはデフォルトのソート形式ではなく、
その直前に指定したソート形式が保持されるようになります。
.RE
.IP "¥fBDISPLAYMODE¥fP"
.B fd
起動時の、
ファイル一覧リストのファイル名表示形式を設定します。
symbolic リンク表示形式、ファイルタイプシンボルの表示、
及びドットファイルの非表示を、それぞれ独立に選択できます。
デフォルトは
.B 0
です。
設定する値は以下のとおり。
.RS 18
.ta 0.5i 1.75i 3i
.nf
¥fB0¥fP	標準
¥fB1¥fP	SYMLINK
¥fB2¥fP		FILETYPE
¥fB3¥fP	SYMLINK &	FILETYPE
¥fB4¥fP			DOTFILE
¥fB5¥fP	SYMLINK &		DOTFILE
¥fB6¥fP		FILETYPE &	DOTFILE
¥fB7¥fP	SYMLINK &	FILETYPE &	DOTFILE
.fi
.RE
.IP "¥fBSORTTREE¥fP"
ツリー表示画面でディレクトリの並びをソートするようにします。
ソートタイプは ¥fBSORT_DIR¥fP で指定したものを用いますが、
「サイズ順」及び「日付順」になっている場合はソートできません。
また、カレントディレクトリパスに含まれるディレクトリは、
ソートタイプに関係なく常にツリー構造の先頭に来ます。
0 かナル以外の値であれば、何を定義しても有効です。
.IP "¥fBWRITEFS¥fP"
¥fBWRITE_DIR¥fP コマンドの使用を禁止します。
値を
.B 1
にすると、
明示的にコマンドが実行された時のみディレクトリに対して書込みを行ない、
並び替えの後に書込みの確認を聞いてこないようになります。
値を
.B 2
にすると、コマンドでの実行すら無効になり、
ディレクトリの書込みが一切禁止されます。
.IP "¥fBADJTTY¥fP"
.B fd
を終了する時に、端末モードを正常な状態に強制的にリセットします。
端末が文字化けするような状態を、
.B fd
を起動することで正しく調整することができます。
0 かナル以外の値であれば、何を定義しても有効です。
.IP "¥fBCOLUMNS¥fP"
.B fd
起動時の画面表示列を設定します。
デフォルトは
.B 2
列です。
1, 2, 3, 5 以外の値を指定すると無視されます。
.IP "¥fBMINFILENAME¥fP"
ファイル一覧リスト内の、
ファイル名表示領域の最小文字数を設定します。
端末のカラム数や画面表示列によって、
ここで設定した文字数分だけの領域が確保できない場合には、
UID,GID、タイムスタンプ、サイズ、の順で情報を減じていきます。
デフォルトは
.B 12
文字です。
.IP "¥fBHISTSIZE¥fP"
¥fBEXECUTE_FILE¥fP や ¥fBEXECUTE_SH¥fP で参照できる
履歴の数の上限を設定します。
デフォルトは
.B 50
個です。
この値が
.B 0
の時には履歴参照ができません。
.IP "¥fBSAVEHIST¥fP"
履歴セーブファイルに保存する数の上限を設定します。
デフォルトは
.B 50
個です。
この値が
.B 0
の時にはセーブファイルを作成しません。
.IP "¥fBDIRCOUNTLIMIT¥fP"
ツリー表示モードで、ディレクトリ内のファイルを調べる上限数を設定します。
後ろに '¥fB>¥fP' のついたディレクトリであっても、
その中にサブディレクトリが一つもなければ、
展開してもツリー構造は変化しません。
ディレクトリ内のファイル数 (ディレクトリも含む) がこの数値以内であれば、
一つもサブディレクトリを持たないディレクトリには、
最初から '¥fB>¥fP' をつけません。
また、画面右に表示されるディレクトリ内ファイルの一覧も、
この数値を越えては表示しないようになります。
処理の遅いマシンでは、この値を 0 にしておけば、
快適な処理速度が実現できます。
デフォルトは
.B 50
ファイルです。
.IP "¥fBTMPDIR¥fP"
アーカイバコマンドが、
アーカイブファイル内のファイルを一時的に解凍するための
作業ディレクトリを設定します。
デフォルトは
.B /tmp
です。
.IP "¥fBLANGUAGE¥fP"
表示する文字の言語を指定します。
.B
fd
の出力する各種メッセージの他、
漢字を含むファイル名に対するコード変換も行なわれます。
但し、入力側の漢字コードは固定です。
選択できる文字種は以下のとおりですが、
これらの文字列が含まれていれば判別しますので、
環境変数
.B LANG
の値をそのまま用いても有効です。
.RS 18
.ta 1.5i 3i
.nf
¥fBJIS¥fP, ¥fBjis¥fP	7bit JIS
¥fBEUC¥fP, ¥fBeuc¥fP	EUC 漢字
¥fBSJIS¥fP, ¥fBsjis¥fP	シフト JIS
¥fBENG¥fP, ¥fBeng¥fP, ¥fBC¥fP	英語 (メッセージのみ)
デフォルト	変換しない
.fi
.RE

.SH 多国語対応
コンパイル時の設定により、
「EUC 漢字」と「シフト JIS」で漢字を入出力できます。
漢字を含むパス名の表示には、漢字の 2byte 目に対する考慮がされています。
出力に関しては、
内部変数
.B LANGUAGE
により、動的に漢字コードを選択できます。
文字列の入力では、
日本語入力フロントエンドプロセッサを用いて漢字の入力が可能です。

コマンドマクロやシェルコマンド文字列内に漢字は使用できますが、
内部変数の値には漢字は使用できません。
¥'¥fB％¥fP' や '¥fB”¥fP' など、2byte 文字の記号は、
メタキャラクタなどの記号としては用いることができません。
ワイルドカードの検索では、漢字は 1 文字として見なされません。

.SH 著者
白井 隆 <shirai@red.nintendo.co.jp>。
MS-DOS 用に作られたオリジナルの『ＦＤ』は、
A.Idei <SDI00544@niftyserve.or.jp> 氏によって 1989 年に
最初に作成、公開されました。
.B fd
はこのインプリメントを模して、
1995 年に UNIX 用に一から新たに作成されました。

.SH 関連ファイル
.PD 0
.TP 10
.B /etc/fdrc
システム共通の
.B fd
初期設定ファイル。
.TP
.B ‾/.fdrc
個人用の
.B fd
初期設定ファイル。
.TP
.B ‾/.fd_history
実行コマンド履歴のセーブファイル。
.TP
.B /bin/sh
環境変数
.B SHELL
が未定義だった場合のユーザシェル。
.TP
.B /tmp/fd*
アーカイブファイル解凍のための一時的ディレクトリ。
.PD

.SH 制限事項
コマンドマクロの展開後のサイズは 1023 文字までに制限されています。
文字列の入力は、画面サイズにも依存しますが、
255 文字を越えては入力できません。

登録できるキー割当ては 256 個までです。
このうち、ユーザ定義マクロで割当てられるのは 64 個までです。
登録できるランチャは、アーカイブブラウザの登録を含めて 32 個までです。
登録できるアーカイブコマンドは、圧縮と解凍を一組として 16 組までです。
定義できるエイリアスは 256 個までです。
これらの上限値には、最初から組込み定義されているものを含みます。

端末の種類によって、
一部のファンクションキーや特殊キーの入力ができないことがあります。
.BR termcap (5)
に登録されていない機能のデフォルトシーケンスは、
.B VT200
互換のシーケンスを採用していますが、
端末がこれに対応できていない場合は、
その機能を用いたキーの取得や画面制御ができません。

.SH 関連事項
.BR sh (1),
.BR ls (1),
.BR tar (1),
.BR compress (1),
.BR zcat (1),
.BR gzip (1),
.BR gunzip (1),
.BR lha (1),
.BR termcap (5)

.SH バグ
アーカイブファイル内に ".." を含んだパス名で圧縮してある場合は、
アーカイブブラウザが正常に働きません。
アーカイブファイル内の symbolic リンクは個別に展開できません。

ユーザインタフェースが稚拙です。

.SH 著作権
Copyright (C) 1995 by Takashi SHIRAI

白井 隆, 任天堂株式会社 開発技術部
.br
.in +8
<shirai@red.nintendo.co.jp>
