#!/bin/sh

CC=cc
CPP="$CC -E"
TAR=tar

TMPSRC=tmptest.c
TMPEXE=tmptest
LIBS=
trap "rm -f $TMPSRC $TMPEXE; exit 0" 0 1 2 15
docc='$CC $TMPSRC -o $TMPEXE $LIBS > /dev/null 2>&1'
docpp='$CPP $TMPSRC 2>&1 > /dev/null'

setheader() {
	echo "" > $TMPSRC
	if [ -z "$1" ]; then return; fi
	for i in $1; do
		echo "#include <${i}.h>" >> $TMPSRC
	done;
}

compile() {
	setheader "$2"
	echo "$3 test() { $1; } main() {}" >> $TMPSRC
	if eval $docc; then ret=0; else ret=1; fi
	rm -f $TMPEXE
	return $ret
}

useheader() {
	echo "Checking for <$1.h>..." 1>&2
	setheader "$1"
	if [ -z "`eval $docpp`" ]; then ret=0; else ret=1; fi
	rm -f $TMPEXE
	return $ret
}

noheader() { if useheader "$1"; then return 1; else return 0; fi }

inheader() {
	re=$1
	func=$3
	if [ -z "$3" ]; then
		echo "Checking for \"$1\" in <$2.h>..." 1>&2
	else
		echo "Checking for \"$3\" in <$2.h>..." 1>&2
		re="CONFIGURE($re)"
		func="CONFIGURE($func)"
	fi
	setheader "$2"
	echo "test() { $func; } main() {}" >> $TMPSRC
	$CPP $TMPSRC > $TMPEXE 2> /dev/null
	if egrep "$re" $TMPEXE 2>&1 > /dev/null; then ret=0; else ret=1; fi
	rm -f $TMPEXE
	return $ret
}

noinheader() { if inheader "$1" "$2" "$3"; then return 1; else return 0; fi }

isexist() {
	echo "Checking for $1..." 1>&2
	return `compile "$1" "$2" "$3"`
}

noexist() { if isexist "$1" "$2" "$3"; then return 1; else return 0; fi }

havelib() {
	echo "Checking for -l$1..." 1>&2
	ORGLIBS=$LIBS
	LIBS="$LIBS -l$1"
	if compile "$2" "$3" "$4"; then return 0
	else LIBS=$ORGLIBS; return 1
	fi
}


echo "/*"
echo " *	Definitions of Your Configuration"
echo " */"
echo


for i in TARUSESPACE TERMCAPLIB REGEXPLIB EXTENDLIB \
USELEAPCNT NOVOID NOUID_T DECLERRLIST PWNEEDERROR NOERRNO NOFILEMODE \
NOUNISTDH NOSTDLIBH USESELECTH USESYSDIRH USETIMEH USETERMIO \
USEDIRECT SYSVDIRENT HAVETIMEZONE \
USESTATVFSH USESTATFSH USEVFSH USEMOUNTH USEFSDATA USEFFSIZE STATFSARGS \
USEMNTTABH USEMNTCTL USEMNTENTH USEMNTINFOR USEMNTINFO USEGETMNT USEFSTABH \
MOUNTED USERE_COMP USEREGCOMP USEREGCMP \
USERAND48 USESETENV NOSELECT NOSTRSTR USEUTIME USEGETWD SIGARGINT
do
	echo "#ifdef	$i"
	echo "#undef	$i"
	echo "#endif"
done
echo


echo "Checking for tar(1)..." 1>&2
touch $TMPSRC
$TAR cf $TMPEXE $TMPSRC
if $TAR tvf $TMPEXE |
(read mode other; echo $mode | egrep '/' 2>&1 > /dev/null); then
	:
else
	echo "#define	TARUSESPACE"
fi
rm -f $TMPEXE

if havelib ncurses 'char b[1024]; tgetent(b,"T")'; then
	echo "#define	TERMCAPLIB	\"-lncurses\""
elif havelib termlib 'char b[1024]; tgetent(b,"T")'; then
	echo "#define	TERMCAPLIB	\"-ltermlib\""
elif havelib termcap 'char b[1024]; tgetent(b,"T")'; then
	echo "#define	TERMCAPLIB	\"-ltermcap\""
elif havelib curses 'char b[1024]; tgetent(b,"T")'; then
	echo "#define	TERMCAPLIB	\"-lcurses\""
elif havelib 'curses -ltermcap' 'char b[1024]; tgetent(b,"T")'; then
	echo "#define	TERMCAPLIB	\"-lcurses -ltermcap\""
fi

if havelib gen 'main()'; then
	echo "#define	REGEXPLIB	\"-lgen\""
elif havelib compat 'main()'; then
	echo "#define	REGEXPLIB	\"-lcompat\""
elif havelib PW 'main()'; then
	echo "#define	REGEXPLIB	\"-lPW\""
elif havelib PW 'main()' '' 'char Error[1024];'; then
	echo "#define	REGEXPLIB	\"-lPW\""
	echo "#define	PWNEEDERROR"
fi

EXTENDLIB=
if noexist 'getmntent()' 'stdio mntent' \
&& havelib sun 'getmntent()' 'stdio mntent'; then
	EXTENDLIB="$EXTENDLIB -lsun"
fi
if noexist 'getmntinfo_r()' 'stdio sys/mount' \
&& havelib c_r 'getmntinfo_r()' 'stdio sys/mount'; then
	EXTENDLIB="$EXTENDLIB -lc_r"
fi
if [ -n "$EXTENDLIB" ]; then
	echo "#define	EXTENDLIB	\"$EXTENDLIB\""
fi


echo "Checking for leapcnt..." 1>&2
setheader 'stdio tzfile'
cat >> $TMPSRC <<EOF
int main() {
	struct tzhead t;
	FILE *fp;
	if (chdir(TZDIR) < 0 || !(fp = fopen(TZDEFAULT, "r"))
	|| fread(&t, sizeof(t), 1, fp) != 1) return(0);
	fclose(fp);
	return(*((long *)t.tzh_leapcnt));
}
EOF
if eval $docc; then
	if ./$TMPEXE; then
		:
	else
		echo "#define	USELEAPCNT"
	fi
fi
rm -f $TMPEXE

if noexist 'void *p'; then
	echo "#define	NOVOID"
fi
if noinheader 'uid_t' sys/types; then
	echo "#define	NOUID_T"
fi
if inheader 'sys_errlist' stdio; then
	echo "#define	DECLERRLIST"
fi
if noinheader 'errno' errno; then
	echo "#define	NOERRNO"
fi
if noinheader '[0-7]*.*,[0-7]*.*,[0-7]*.*' sys/stat 'S_IRUSR,S_IWGRP,S_IXOTH'
then
	echo "#define	NOFILEMODE"
fi
if noheader unistd; then
	echo "#define	NOUNISTDH"
fi
if noheader stdlib; then
	echo "#define	NOSTDLIBH"
fi
if inheader 'select' sys/select; then
	echo "#define	USESELECTH"
fi
if inheader '0*x*[0-9a-fA-F ]*' sys/dir 'DEV_BSIZE'; then
	echo "#define	USESYSDIRH"
fi
if isexist 'struct tm *t' 'sys/types time'; then
	echo "#define	USETIMEH"
fi
if noheader sgtty; then
	echo "#define	USETERMIO"
fi
if noheader dirent; then
	echo "#define	USEDIRECT"
elif noexist 'struct dirent d; d.d_namlen' 'sys/types dirent'; then
	echo "#define	USESYSVDIRENT"
fi
if inheader 'extern.*[^a-zA-Z_]timezone' sys/time \
&& isexist 'extern time_t timezone; timezone' sys/time; then
	echo "#define	HAVETIMEZONE"
fi


if useheader sys/statvfs; then
	echo "#define	USESTATVFSH"
elif useheader sys/statfs; then {
	echo "#define	USESTATFSH"
	if inheader 'f_nlsdirtype' sys/statfs; then
		echo "#define	STATFSARGS	2"
	else
		echo "#define	STATFSARGS	4"
	fi
}
elif useheader sys/vfs; then
	echo "#define	USEVFSH"
elif useheader sys/mount; then {
	echo "#define	USEMOUNTH"
	if inheader 'MOUNT_UFS' sys/mount; then
		echo "#define	USEFFSIZE"
	elif inheader 'struct.*fs_data' sys/mount; then
		echo "#define	USEFSDATA"
	fi
}
fi

if useheader sys/mnttab; then
	echo "#define	USEMNTTABH"
	echo "#define	MOUNTED		MNTTAB"
elif isexist 'mntctl()'; then
	echo "#define	USEMNTCTL"
elif useheader mntent; then
	echo "#define	USEMNTENTH"
elif isexist 'getmntinfo_r()'; then
	echo "#define	USEMNTINFOR"
elif isexist 'getmntinfo()'; then
	echo "#define	USEMNTINFO"
elif isexist 'getmnt()'; then
	echo "#define	USEGETMNT"
elif useheader fstab; then
	echo "#define	USEFSTABH"
fi


if isexist 'regex_t *re; regfree()' 'sys/types regex'; then
	echo "#define	USEREGCOMP"
elif isexist 'extern char re_comp(); re_comp()' ctype; then
	echo "#define	USERE_COMP"
elif isexist 'extern char regcmp(); regcmp()' ctype; then
	echo "#define	USEREGCMP"
fi


if isexist 'rand48()'; then
	echo "#define	USERAND48"
fi
if isexist 'setenv()'; then
	echo "#define	USESETENV"
fi
if noexist 'select()'; then
	echo "#define	NOSELECT"
fi
if noexist 'strstr()'; then
	echo "#define	NOSTRSTR"
fi
if noexist 'utimes()'; then
	echo "#define	USEUTIME"
fi
if noexist 'getcwd()'; then
	echo "#define	USEGETWD"
fi
if inheader 'int.*[^a-zA-Z_]signal' signal; then
	echo "#define	SIGARGINT"
fi
